import { ValidatorFn, FormControl, AbstractControl } from '@angular/forms';
import { NgValidationError } from '@handy-ng/modules/handy-form/validators/interfaces';
import { HandyNgSyncValidator } from '@handy-ng/core';

class {{ UcFirst validatorName }}Validator extends HandyNgSyncValidator {

  // Return true if value is invalid
  public static isInValidIf(value: any): boolean {
    return {{ UcFirst validatorName }}Validator.isEmpty(value);

  }

  public static validate(errMsg: string = 'This field is invalid'): ValidatorFn {

    return (control: FormControl | AbstractControl): NgValidationError => {

      let { value } = control;

      if ({{ UcFirst validatorName }}Validator.emptyValueIsValid && {{ UcFirst validatorName }}Validator.isEmpty(value)) {
        return null;
      }

      let invalid: boolean = {{ UcFirst validatorName }}Validator.isInValidIf(value);

      if (invalid) {
        return {{ UcFirst validatorName }}Validator.returnError(errMsg);
      }

      // ! has to return null if field is valid
      return null;

    }

  }

}

export const {{ LcFirst validatorName }} = {{ UcFirst validatorName }}Validator.validate;

// import {{ LcFirst validatorName }} from '@ng-shared/form-validators';