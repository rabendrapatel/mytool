{"version":3,"sources":["./src/app/handy/modules/dev/modules/user-crud/user-crud-form/user-crud-form.component.ts","./src/app/handy/modules/dev/modules/user-crud/user-crud-form/user-crud-form.component.html","./src/app/handy/modules/dev/modules/user-crud/user-crud-routing.module.ts","./src/app/handy/modules/dev/modules/user-crud/user-crud-table/user-crud-table.component.ts","./src/app/handy/modules/dev/modules/user-crud/user-crud-table/user-crud-table.component.html","./src/app/handy/modules/dev/modules/user-crud/user-crud.component.ts","./src/app/handy/modules/dev/modules/user-crud/user-crud.component.html","./src/app/handy/modules/dev/modules/user-crud/user-crud.module.ts"],"names":[],"mappings":"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","file":"modules-user-crud-user-crud-module.js","sourcesContent":["import { HandyAutoCompleteData, HandyNgSelectOptionsData, HandyNgRadioGroupOptionsData, HandyNgSelectOptions } from '@handy-ng/types';\r\nimport { HandyNgUserService, HandyNgUtilsService, HandyNgConfigService } from '@handy-ng/services';\r\nimport { Component, OnInit, Optional, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { HandyMemoryStateForm } from '@handy-ng/extenders/handy-memory-state-form';\r\n\r\nimport { UserNgModel } from '@handy-ng/models/user.ng-model';\r\nimport { UserModelInterfaces } from '@server-models/user/model.interface';\r\nimport { Injectable } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve, ActivatedRoute } from '@angular/router';\r\n\r\nimport { required } from '@ng-shared/form-validators';\r\n\r\n@Component({\r\n  selector: 'user-crud-form-form',\r\n  templateUrl: './user-crud-form.component.html',\r\n  styleUrls: ['./user-crud-form.component.scss']\r\n})\r\nexport class UserCrudFormComponent extends HandyMemoryStateForm<FormDataShape> implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public formName = 'userCrudForm';\r\n  public rememberFormState: boolean = false;\r\n  public sample: any;\r\n\r\n  public static fieldsToSelect: ModelFieldsFormWorksWith[] = ['email', 'name', 'roles', 'permissions', 'groups', 'banned'];\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                          Options for select inputs                         */\r\n  /* -------------------------------------------------------------------------- */\r\n\r\n  public rolesSelectOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public permissionsSelectOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                          Radio groups btns                                 */\r\n  /* -------------------------------------------------------------------------- */\r\n\r\n  constructor (\r\n    @Optional() protected route: ActivatedRoute,\r\n    @Optional() public dialogRef: MatDialogRef<UserCrudFormComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\r\n    protected _handyNgUserService: HandyNgUserService, \r\n    public handyNgUtilsService: HandyNgUtilsService, \r\n    private __handyNgConfig: HandyNgConfigService,\r\n    protected _model: UserNgModel) {\r\n    \r\n    super(_handyNgUserService, handyNgUtilsService, dialogRef, dialogData, route);\r\n    \r\n    this.initExtender();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onValidSubmit(formData: FormDataShape): void {\r\n\r\n    let promise: Promise<void> = (this.isUpdate) ? this._updateEntry(formData) : this._createEntry(formData);\r\n\r\n    promise.then(() => {\r\n\r\n      // TODO Redirect or whatever needs to be done after update;\r\n\r\n      this.closeDialog({ ...formData, ...{ _id: this.updateEntryId }});\r\n\r\n    })\r\n    .catch(err => {\r\n      this._handyNgUserService.redirectToErrPageWithApiErr(err);\r\n    })\r\n\r\n  }\r\n  \r\n  public onInvalidSubmit(formData: FormDataShape): void {\r\n    // console.log(formData)\r\n  }\r\n\r\n  protected _createEntry(formData: FormDataShape): Promise<void> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._model.createOne({ ...formData, registeredViaInvitation: true }).subscribe(result => {\r\n\r\n        this.updateEntryId = result.data._id;\r\n        return resolve();\r\n\r\n      }, err => {\r\n        return reject(err);\r\n      })\r\n\r\n    })\r\n\r\n  } \r\n\r\n  protected _updateEntry(formData: FormDataShape): Promise<void> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._model.updatedOne({ _id: this.updateEntryId }, formData, { skipUpdateHistory: false, updateName: 'LoginComponent form update' }).subscribe(result => {\r\n        return resolve();\r\n      }, err => {\r\n        return reject(err);\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  protected getFormInitData(resolverData: Partial<FormDataShape>): Partial<FormDataShape> {\r\n\r\n    return resolverData;\r\n\r\n  }\r\n  \r\n  createForm(formInitData: Partial<FormDataShape>): FormGroup {\r\n\r\n    let fg: FormGroup = new FormGroup({\r\n      email: new FormControl(formInitData.email, [required('Email is required')], [this._model.uniqueValidator('email', 'This email is taken', formInitData.email, 'all')]),\r\n      name: new FormControl(formInitData.name, [/* Sync validators */], [/* Async validators */]),\r\n      roles: new FormControl(formInitData.roles, [/* Sync validators */], [/* Async validators */]),\r\n      permissions: new FormControl(formInitData.permissions, [/* Sync validators */], [/* Async validators */]),\r\n      groups: new FormArray([]),\r\n      banned: new FormControl(formInitData.banned, [/* Sync validators */], [/* Async validators */]),\r\n    })\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                          Form arrays handling                              */\r\n  /* -------------------------------------------------------------------------- */\r\n  this.addBulkControlToFormArray(formInitData.groups, this.addGroupsControl.bind(this), fg);\r\n\r\n  return fg;\r\n  \r\n  }\r\n\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*              Methods for adding controls to form arrays                    */\r\n  /* -------------------------------------------------------------------------- */\r\n  \r\n  public addGroupsControl(value: any = null, fg?: FormGroup): void {\r\n\r\n    let control: FormControl | FormArray | FormGroup = new FormControl(value, [/* Sync validators */], [/* Async validators */]);\r\n    this.addControlToFormArray('groups', control, fg);\r\n\r\n  }\r\n  \r\n\r\n}\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Form resolver                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserCrudFormComponentResolver implements Resolve<Partial<FormDataShape>>{\r\n\r\n  constructor (protected _model: UserNgModel) {}\r\n\r\n  // Can be used for modal integration\r\n  public getItemData(id: UserModelInterfaces['idType']): Promise<Partial<FormDataShape>> {\r\n\r\n    if (id === undefined) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._model.findById(id, { selectType: 'select', fields: UserCrudFormComponent.fieldsToSelect })\r\n        .subscribe(result => {\r\n\r\n          if (result.data.foundRecord) {\r\n            return resolve(result.data.doc);\r\n          } else {\r\n            return resolve(null);\r\n          }\r\n\r\n        }, err => {\r\n          return resolve(null);\r\n        })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<Partial<FormDataShape>> {\r\n\r\n    return this.getItemData(+route.params['id']);\r\n\r\n  }\r\n\r\n}\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                               Resolver usage                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\n/* -------------------------------- Via route ------------------------------- */\r\n/*\r\n  ...\r\n  import { UserCrudFormComponent, UserCrudFormComponentResolver } from 'path to this file..';\r\n  ...\r\n\r\n  ...\r\n  {\r\n    path: 'route-path/:id',\r\n    component: UserCrudFormComponent,\r\n    resolve: {\r\n      formData: UserCrudFormComponentResolver\r\n    }\r\n  },\r\n  ...\r\n\r\n*/\r\n\r\n/* ------------------------------- Via dialog ------------------------------- */\r\n\r\n/* \r\n\r\n  ...\r\n  import { UserCrudFormComponent, UserCrudFormComponentResolver } from 'path to this file..';\r\n  import { MatDialog } from '@angular/material/dialog';\r\n  ...\r\n\r\n  ...\r\n  constructor (public dialog: MatDialog, private formResolver: UserCrudFormComponentResolver) { }\r\n  ...\r\n\r\n  openDialog(id?: number) {\r\n\r\n    this.formResolver.getItemData(id)\r\n      .then(formData => {\r\n\r\n      const dialogRef = this.dialog.open(UserCrudFormComponent, {\r\n        data: { formData }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log(`Dialog result: ${result}`);\r\n      });\r\n\r\n    })\r\n    .catch(err => {\r\n      // Handle error\r\n    })\r\n\r\n  }\r\n*/\r\n\r\ntype ModelFieldsFormWorksWith = Extract<UserModelInterfaces['allFields'], 'email' | 'name' | 'roles' | 'permissions' | 'groups' | 'banned'>;\r\ntype FormDataShape = Pick<UserModelInterfaces['fullModelShape'], ModelFieldsFormWorksWith> & {\r\n}\r\ntype DialogData = {\r\n  formData: Partial<FormDataShape>\r\n}\r\n","<ng-template #formContent>\r\n  <handy-form #formComp [formName]=\"formName\" [formGroup]=\"form\" [rememberState]=\"rememberFormState\"\r\n    [defaultResetBtn]=\"true\" [disablePin]=\"isUpdate\" (validSubmitEvent)=\"onValidSubmit($event)\"\r\n    (invalidSubmitEvent)=\"onInvalidSubmit($event)\" (submitDisabledChange)=\"submitDisabledChange($event)\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px\">\r\n\r\n      <!-- Email -->\r\n      <handy-text-input class=\"handy-form-input\" [formControl]=\"form.get('email')\" fieldName=\"userCrudForm_email\" label=\"Email\"\r\n        placeholder=\"Email\"></handy-text-input>\r\n\r\n      <!-- Name -->\r\n      <handy-text-input class=\"handy-form-input\" [formControl]=\"form.get('name')\" fieldName=\"userCrudForm_name\" label=\"Name\" placeholder=\"Name\">\r\n      </handy-text-input>\r\n  \r\n      <!-- Roles -->\r\n      <handy-multi-select-input class=\"handy-form-input\" [options]=\"rolesSelectOptions\" [hasEmptyOption]=\"true\" emptyOptionLabel=\"None\"\r\n        [formControl]=\"form.get('roles')\" fieldName=\"userCrudForm_roles\" label=\"Roles\" placeholder=\"Roles\">\r\n      </handy-multi-select-input>\r\n  \r\n      <!-- Permissions -->\r\n      <handy-multi-select-input class=\"handy-form-input\" [options]=\"permissionsSelectOptions\" [hasEmptyOption]=\"true\" emptyOptionLabel=\"None\"\r\n        [formControl]=\"form.get('permissions')\" fieldName=\"userCrudForm_permissions\" label=\"Permissions\"\r\n        placeholder=\"Permissions\"></handy-multi-select-input>\r\n  \r\n      <!-- Company type -->\r\n      <div fxFlex=\"100%\">\r\n  \r\n        <div *ngFor=\"let fControl of getArrayControls('groups'), let i = index\">\r\n  \r\n          <handy-text-input [formControl]=\"fControl\" fieldName=\"userCrudForm_groups\" label=\"Company type\"\r\n            placeholder=\"Company type\"></handy-text-input>\r\n  \r\n          <button (click)=\"removeControlFromArray('groups', i)\" mat-raised-button color=\"warn\">Remove control</button>\r\n  \r\n        </div>\r\n  \r\n        <button (click)=\"addGroupsControl()\" mat-raised-button color=\"primary\">Add Company type control</button>\r\n  \r\n      </div>\r\n  \r\n      <!-- Banned -->\r\n      <handy-check-box class=\"handy-form-input\" labelPosition=\"after\" [formControl]=\"form.get('banned')\" fieldName=\"userCrudForm_banned\"> Banned\r\n      </handy-check-box>\r\n\r\n      <form-actions-bar *ngIf=\"!inDialog\">\r\n\r\n        <raised-btn color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Submit\r\n        </raised-btn>\r\n\r\n      </form-actions-bar>\r\n\r\n    </div>\r\n\r\n\r\n  </handy-form>\r\n</ng-template>\r\n\r\n<!-- For handling both, as regular component and as dialog -->\r\n<ng-container *ngIf=\"!inDialog\">\r\n\r\n  <div class=\"handy-form-page-wrapper\">\r\n\r\n    <div class=\"handy-form-wrapper\">\r\n\r\n      <basic-btn icon=\"chevron_left\" [routerLink]=\"[(isUpdate) ? '../../' : '../']\">Back to all</basic-btn>\r\n      <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"inDialog\">\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <basic-btn icon=\"close\" (click)=\"dialogRef.close()\">Cancel</basic-btn>\r\n    <raised-btn color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Submit</raised-btn>\r\n  </mat-dialog-actions>\r\n\r\n</ng-container>\r\n\r\n<handy-number-input [(ngModel)]=\"sample\"></handy-number-input>","import { ErrorComponent } from 'src/app/pages/error/error.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserCrudComponent } from './user-crud.component';\r\nimport { UserCrudTableComponent } from './user-crud-table/user-crud-table.component';\r\nimport { UserCrudFormComponent, UserCrudFormComponentResolver } from './user-crud-form/user-crud-form.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserCrudComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: UserCrudTableComponent, \r\n      },\r\n      {\r\n        path: 'new', \r\n        component: UserCrudFormComponent,\r\n      },     \r\n      {\r\n        path: 'edit/:id',\r\n        component: UserCrudFormComponent,\r\n        resolve: {\r\n          formData: UserCrudFormComponentResolver\r\n        }\r\n      },   \r\n    ]\r\n  },\r\n  { path: '**', component: ErrorComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserCrudRoutingModule { }","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HandyDataTable } from '@handy-ng/extenders/handy-datatable';\r\nimport { HandyNgUserService } from '@handy-ng/services/handy-ng-user.service';\r\nimport { HandyDataTableResult, HandyNgSelectOptions, FilterQuery, MongooseSortingOptions } from '@handy-ng/types';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\nimport { UserNgModel } from '@handy-ng/models/user.ng-model';\r\nimport { UserModelInterfaces } from '@server-models/user/model.interface';\r\n\r\n@Component({\r\n  selector: 'user-crud-table-table',\r\n  templateUrl: './user-crud-table.component.html',\r\n  styleUrls: ['./user-crud-table.component.scss']\r\n})\r\nexport class UserCrudTableComponent extends HandyDataTable<TableDataType, FilterType, UserModelInterfaces> implements OnInit, OnDestroy {\r\n\r\n  public modelFieldsToQuery: UserModelInterfaces['allFields'][] = ['_id', 'email', 'name', 'roles', 'permissions', 'hasVerifiedEmail', 'banned', ];\r\n  public displayedColumns: string[] = ['_id', 'email', 'name', 'roles', 'permissions', 'hasVerifiedEmail', 'banned', 'actions'];\r\n\r\n  public rememberTableState: boolean = true; \r\n  public tableName: string = 'userCrudTable_table';\r\n\r\n  /* ---------------------------- Optional columns ---------------------------- */\r\n  public optionalColumns: HandyNgSelectOptions[] = [\r\n    {\r\n      value: 'email',\r\n      displayValue: 'Email'\r\n    },\r\n    {\r\n      value: 'name',\r\n      displayValue: 'Name'\r\n    },\r\n    {\r\n      value: 'roles',\r\n      displayValue: 'Roles'\r\n    },\r\n    {\r\n      value: 'permissions',\r\n      displayValue: 'Permissions'\r\n    },\r\n    {\r\n      value: 'hasVerifiedEmail',\r\n      displayValue: 'Verified email'\r\n    },\r\n    {\r\n      value: 'banned',\r\n      displayValue: 'Banned'\r\n    },\r\n  ];\r\n  \r\n  /* ---------------------------- Searchable fileds --------------------------- */\r\n  public searchableFields: HandyNgSelectOptions[] = [\r\n    {\r\n      value: '_id',\r\n      displayValue: 'Id'\r\n    },\r\n    {\r\n      value: 'email',\r\n      displayValue: 'Email'\r\n    },\r\n    {\r\n      value: 'name',\r\n      displayValue: 'Name'\r\n    },\r\n    {\r\n      value: 'roles',\r\n      displayValue: 'Roles'\r\n    },\r\n    {\r\n      value: 'permissions',\r\n      displayValue: 'Permissions'\r\n    },\r\n    {\r\n      value: 'newEmail',\r\n      displayValue: 'New email'\r\n    },\r\n  ];\r\n  \r\n  /* -------------------------------------------------------------------------- */\r\n  /*                              Additional filter                             */\r\n  /* -------------------------------------------------------------------------- */\r\n  public _idFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public emailFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public passwordFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public nameFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public rolesFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public permissionsFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public hasVerifiedEmailFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public newEmailFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n  public bannedFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n\r\n  constructor (\r\n    protected _handyNgUserService: HandyNgUserService, \r\n    protected _model: UserNgModel) {\r\n\r\n    super(_handyNgUserService);\r\n    this.initExtender();\r\n\r\n  }\r\n\r\n  public createFilterForm(filterData: FilterType): void {\r\n\r\n    this.filterForm = new FormGroup({\r\n      search: new FormControl(filterData.search),\r\n      searchableFields: new FormControl(filterData.searchableFields),\r\n      displayedColumns: new FormControl(filterData.displayedColumns),\r\n      _id: new FormControl(filterData._id),\r\n      email: new FormControl(filterData.email),\r\n      password: new FormControl(filterData.password),\r\n      name: new FormControl(filterData.name),\r\n      roles: new FormControl(filterData.roles),\r\n      permissions: new FormControl(filterData.permissions),\r\n      hasVerifiedEmail: new FormControl(filterData.hasVerifiedEmail),\r\n      newEmail: new FormControl(filterData.newEmail),\r\n      banned: new FormControl(filterData.banned),\r\n    })\r\n\r\n  }\r\n\r\n  public getData(filterData: FilterType, page: number, limit: number, sort: MongooseSortingOptions<TableDataType>): Promise<HandyDataTableResult<TableDataType>> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      let { search = '', searchableFields } = filterData;\r\n        \r\n      this._model.search(\r\n        search,\r\n        searchableFields,\r\n        { selectType: 'select', fields: this.modelFieldsToQuery },\r\n        this.getFindOptions(page, limit, sort),\r\n        this.getAdditionalSearchQueries(filterData),\r\n        this.getAdditionalFilterQueries(filterData)\r\n      )\r\n        .subscribe(result => {\r\n\r\n          let { docs, paginationData } = result.data;\r\n\r\n          return resolve({\r\n            dataSource: new MatTableDataSource(docs as any),\r\n            pageIndex: paginationData.page,\r\n            itemsCount: paginationData.totalRecordsCount\r\n          });\r\n\r\n        }, err => {\r\n\r\n          return reject(err);\r\n\r\n        })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  // For queries that are not included in default handy model search functionality\r\n  protected getAdditionalSearchQueries(filterData: FilterType): FilterQuery<UserModelInterfaces['fullModelShape']>[] {\r\n    return [];\r\n  }\r\n\r\n  // For additional filters\r\n  protected getAdditionalFilterQueries(filterData: FilterType): FilterQuery<UserModelInterfaces['fullModelShape']>[] {\r\n\r\n    let additionalFilterQueries: FilterQuery<UserModelInterfaces['fullModelShape']>[] = [];\r\n    \r\n    let { _id, email, password, name, roles, permissions, hasVerifiedEmail, newEmail, banned, } = filterData;\r\n\r\n      // Id filter\r\n    if (_id !== null && _id !== undefined) {\r\n      additionalFilterQueries.push({\r\n        _id\r\n      })\r\n    }\r\n\r\n      // Email filter\r\n    if (email !== null && email !== undefined) {\r\n      additionalFilterQueries.push({\r\n        email\r\n      })\r\n    }\r\n\r\n      // Password filter\r\n    if (password !== null && password !== undefined) {\r\n      additionalFilterQueries.push({\r\n        password\r\n      })\r\n    }\r\n\r\n      // Name filter\r\n    if (name !== null && name !== undefined) {\r\n      additionalFilterQueries.push({\r\n        name\r\n      })\r\n    }\r\n\r\n      // Roles filter\r\n    if (roles !== null && roles !== undefined) {\r\n      additionalFilterQueries.push({\r\n        roles\r\n      })\r\n    }\r\n\r\n      // Permissions filter\r\n    if (permissions !== null && permissions !== undefined) {\r\n      additionalFilterQueries.push({\r\n        permissions\r\n      })\r\n    }\r\n\r\n      // Verified email filter\r\n    if (hasVerifiedEmail !== null && hasVerifiedEmail !== undefined) {\r\n      additionalFilterQueries.push({\r\n        hasVerifiedEmail\r\n      })\r\n    }\r\n\r\n      // New email filter\r\n    if (newEmail !== null && newEmail !== undefined) {\r\n      additionalFilterQueries.push({\r\n        newEmail\r\n      })\r\n    }\r\n\r\n      // Banned filter\r\n    if (banned !== null && banned !== undefined) {\r\n      additionalFilterQueries.push({\r\n        banned\r\n      })\r\n    }\r\n    \r\n    return additionalFilterQueries;\r\n\r\n  }\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                              Actions methods                               */\r\n  /* -------------------------------------------------------------------------- */\r\n  public removeEntryAction(id: number): void {\r\n\r\n    this._model.deleteById(id).subscribe(deleteResult => {\r\n\r\n      // TODO do whatever you need to do after removing\r\n      this.refreshTableData();\r\n      console.log(deleteResult);\r\n\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n}\r\n\r\ntype ModelFieldsToQuery = Extract<UserModelInterfaces['allFields'], '_id' | 'email' | 'name' | 'roles' | 'permissions' | 'hasVerifiedEmail' | 'banned' | 'actions'>;\r\ntype TableDataType = Pick<UserModelInterfaces['fullModelShape'], ModelFieldsToQuery> & {\r\n  actions: null,\r\n}\r\n\r\n\r\ninterface FilterType {\r\n  search: string,\r\n  searchableFields: UserModelInterfaces['searchableFields'][],\r\n  displayedColumns: string[],\r\n  _id: UserModelInterfaces['fullModelShape']['_id']\r\n  email: UserModelInterfaces['fullModelShape']['email']\r\n  password: UserModelInterfaces['fullModelShape']['password']\r\n  name: UserModelInterfaces['fullModelShape']['name']\r\n  roles: UserModelInterfaces['fullModelShape']['roles']\r\n  permissions: UserModelInterfaces['fullModelShape']['permissions']\r\n  hasVerifiedEmail: UserModelInterfaces['fullModelShape']['hasVerifiedEmail']\r\n  newEmail: UserModelInterfaces['fullModelShape']['newEmail']\r\n  banned: UserModelInterfaces['fullModelShape']['banned']\r\n}","<div class=\"crud-table-page-wrapper\">\r\n  <div [class]=\"(expanded) ? 'expanded-crud-table-wrapper' : 'crud-table-wrapper'\">\r\n\r\n    <div class=\"crud-table-actions-bar\">\r\n\r\n      <raised-btn icon=\"add\" color=\"primary\" routerLink=\"./new\">New entry</raised-btn>\r\n\r\n\r\n      <handy-form #tableFilter class=\"crud-table-filters-form\" [hideFormOptions]=\"true\">\r\n        <div class=\"crud-table-search-bar\">\r\n\r\n          <handy-text-input #searchInput class=\"crud-table-search-input\" [formControl]=\"filterForm.get('search')\"\r\n            label=\"Search\" placeholder=\"Search\">\r\n          </handy-text-input>\r\n\r\n          <handy-multi-select-input #searchableFieldsSelect class=\"crud-table-searchable-fields-input\"\r\n            [formControl]=\"filterForm.get('searchableFields')\" label=\"Search fields\" placeholder=\"Search fields\">\r\n          </handy-multi-select-input>\r\n\r\n          <div class=\"crud-table-filters-btns-wrapper\">\r\n\r\n            <div class=\"crud-table-filters-btns\">\r\n\r\n              <stroked-btn #filtersToggle color=\"primary\" icon=\"filter_list\">{{ (filtersToggleState) ? 'Hide' : 'Show'}}\r\n                filters</stroked-btn>\r\n              <stroked-btn #clearFilters color=\"warn\" icon=\"refresh\">Reset filters</stroked-btn>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <handy-table-filters>\r\n          <handy-multi-select-input #optionalColumnsSelect class=\"crud-table-filter-input\"\r\n            [formControl]=\"filterForm.get('displayedColumns')\" label=\"Diplay columns\" placeholder=\"Diplay columns\">\r\n          </handy-multi-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('_id')\" label=\"Id\"\r\n            placeholder=\"Id\" [options]=\"_idFilterOptions\" [hasEmptyOption]=\"true\" emptyOptionLabel=\"Any\">\r\n          </handy-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('email')\" label=\"Email\"\r\n            placeholder=\"Email\" [options]=\"emailFilterOptions\" [hasEmptyOption]=\"true\" emptyOptionLabel=\"Any\">\r\n          </handy-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('password')\"\r\n            label=\"Password\" placeholder=\"Password\" [options]=\"passwordFilterOptions\" [hasEmptyOption]=\"true\"\r\n            emptyOptionLabel=\"Any\"></handy-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('name')\" label=\"Name\"\r\n            placeholder=\"Name\" [options]=\"nameFilterOptions\" [hasEmptyOption]=\"true\" emptyOptionLabel=\"Any\">\r\n          </handy-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('roles')\" label=\"Roles\"\r\n            placeholder=\"Roles\" [options]=\"rolesFilterOptions\" [hasEmptyOption]=\"true\" emptyOptionLabel=\"Any\">\r\n          </handy-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('permissions')\"\r\n            label=\"Permissions\" placeholder=\"Permissions\" [options]=\"permissionsFilterOptions\" [hasEmptyOption]=\"true\"\r\n            emptyOptionLabel=\"Any\"></handy-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('hasVerifiedEmail')\"\r\n            label=\"Verified email\" placeholder=\"Verified email\" [options]=\"hasVerifiedEmailFilterOptions\"\r\n            [hasEmptyOption]=\"true\" emptyOptionLabel=\"Any\"></handy-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('newEmail')\"\r\n            label=\"New email\" placeholder=\"New email\" [options]=\"newEmailFilterOptions\" [hasEmptyOption]=\"true\"\r\n            emptyOptionLabel=\"Any\"></handy-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('banned')\" label=\"Banned\"\r\n            placeholder=\"Banned\" [options]=\"bannedFilterOptions\" [hasEmptyOption]=\"true\" emptyOptionLabel=\"Any\">\r\n          </handy-select-input>\r\n\r\n        </handy-table-filters>\r\n\r\n      </handy-form>\r\n\r\n\r\n\r\n    </div>\r\n\r\n    <handy-table>\r\n\r\n      <mat-table [dataSource]=\"dataSource\" matSort cdkDropList cdkDropListOrientation=\"horizontal\"\r\n        (cdkDropListDropped)=\"drop($event)\">\r\n\r\n        <ng-container matColumnDef=\"_id\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Id</basic-btn>\r\n            </span>Id</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element._id}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"email\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Email</basic-btn>\r\n            </span>Email</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.email}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"password\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Password</basic-btn>\r\n            </span>Password</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.password}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Name</basic-btn>\r\n            </span>Name</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.name}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"roles\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Roles</basic-btn>\r\n            </span>Roles</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.roles}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"permissions\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Permissions</basic-btn>\r\n            </span>Permissions</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.permissions}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"hasVerifiedEmail\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Verified email</basic-btn>\r\n            </span>Verified email</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.hasVerifiedEmail}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"newEmail\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">New email</basic-btn>\r\n            </span>New email</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.newEmail}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"banned\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Banned</basic-btn>\r\n            </span>Banned</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.banned}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n\r\n          <mat-header-cell *matHeaderCellDef class=\"crud-table-actions-col\" cdkDrag cdkDragLockAxis=\"x\" mat-sort-header>\r\n            <span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Actions</basic-btn>\r\n            </span>Actions</mat-header-cell>\r\n\r\n          <mat-cell class=\"crud-table-actions-col\" *matCellDef=\"let element\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"flex-end center\" fxLayoutGap=\"8px\">\r\n              <stroked-btn icon=\"edit\" color=\"primary\" [routerLink]=\"['./edit/' + element._id]\">Edit</stroked-btn>\r\n              <stroked-btn icon=\"delete_forever\" color=\"warn\" (confirmClick)=\"removeEntryAction(element._id)\">Remove\r\n              </stroked-btn>\r\n\r\n            </div>\r\n\r\n          </mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n      </mat-table>\r\n\r\n    </handy-table>\r\n\r\n    <handy-table-paginator></handy-table-paginator>\r\n\r\n    <div fxHide.lt-lg class=\"table-expand-btn\">\r\n\r\n      <icon-btn (click)=\"toogleExpandedState()\" [matTooltip]=\"(expanded) ? 'Shrink table' : 'Expand table'\"\r\n        [icon]=\"(expanded) ? 'west' : 'east'\"></icon-btn>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'user-crud',\r\n  templateUrl: './user-crud.component.html',\r\n  styleUrls: ['./user-crud.component.scss']\r\n})\r\nexport class UserCrudComponent {}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/modules/shared/shared.module';\r\nimport { HandyFormModule } from '@handy-ng/modules/handy-form/handy-form.module';\r\nimport { HandyTableModule } from '@handy-ng/modules/handy-table/handy-table.module';\r\n\r\nimport { UserCrudRoutingModule } from './user-crud-routing.module';\r\nimport { UserCrudComponent } from './user-crud.component';\r\nimport { UserCrudFormComponent } from './user-crud-form/user-crud-form.component';\r\nimport { UserCrudTableComponent } from './user-crud-table/user-crud-table.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserCrudComponent,\r\n    UserCrudFormComponent,\r\n    UserCrudTableComponent,\r\n  ],\r\n  imports: [\r\n    HandyFormModule,\r\n    HandyTableModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    UserCrudRoutingModule\r\n  ]\r\n})\r\nexport class UserCrudModule { }\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Lazy loading                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\n/*\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('path to this file ending with: /user-crud/user-crud.module').then(m => m.UserCrudModule),\r\n  },\r\n\r\n*/"],"sourceRoot":"webpack:///"}