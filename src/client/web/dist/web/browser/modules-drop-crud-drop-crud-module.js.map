{"version":3,"sources":["./src/app/handy/models/drop.ng-model.ts","./src/app/modules/drop-crud/drop-crud-form/drop-crud-form.component.ts","./src/app/modules/drop-crud/drop-crud-form/drop-crud-form.component.html","./src/app/modules/drop-crud/drop-crud-routing.module.ts","./src/app/modules/drop-crud/drop-crud-table/drop-crud-table.component.ts","./src/app/modules/drop-crud/drop-crud-table/drop-crud-table.component.html","./src/app/modules/drop-crud/drop-crud.component.ts","./src/app/modules/drop-crud/drop-crud.component.html","./src/app/modules/drop-crud/drop-crud.module.ts"],"names":[],"mappings":"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","file":"modules-drop-crud-drop-crud-module.js","sourcesContent":["import { HandyNgConfigService } from '@handy-ng/services/handy-ng-config.service';\r\nimport { HandyNgApiService } from '@handy-ng/services/handy-ng-api.service';\r\nimport { HandyNgModelMethods } from '@handy-ng/extenders/handy-ng-model-extender';\r\nimport { HandyNgModel } from '@handy-ng/decorators/handy-ng-model.decorator';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n/* ----------------------------- Model interface ---------------------------- */\r\nimport { DropModelInterfaces } from '@server-models/drop/model.interface';\r\n\r\n@HandyNgModel({ name: 'drop' })\r\n@Injectable({ providedIn: 'root' })\r\nexport class DropNgModel extends HandyNgModelMethods<DropModelInterfaces> {\r\n\r\n  constructor (protected _handyApiService: HandyNgApiService,\r\n    protected _handyNgConfigService: HandyNgConfigService) {\r\n\r\n    super(_handyApiService, _handyNgConfigService);\r\n\r\n  }\r\n\r\n}","import { HandyAutoCompleteData, HandyNgSelectOptionsData, HandyNgRadioGroupOptionsData, HandyNgSelectOptions, HandyFileInputData } from '@handy-ng/types';\r\nimport { HandyNgUserService, HandyNgUtilsService } from '@handy-ng/services';\r\nimport { Component, OnInit, Optional, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { HandyMemoryStateForm } from '@handy-ng/extenders/handy-memory-state-form';\r\n\r\nimport { DropNgModel } from '@handy-ng/models/drop.ng-model';\r\nimport { DropModelInterfaces } from '@server-models/drop/model.interface';\r\nimport { Injectable } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve, ActivatedRoute } from '@angular/router';\r\n\r\nimport { required } from '@ng-shared/form-validators';\r\n\r\n@Component({\r\n  selector: 'drop-crud-form-form',\r\n  templateUrl: './drop-crud-form.component.html',\r\n  styleUrls: ['./drop-crud-form.component.scss']\r\n})\r\nexport class DropCrudFormComponent extends HandyMemoryStateForm<FormDataShape> implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public formName = 'dropCrudForm';\r\n  public rememberFormState: boolean = true;\r\n\r\n  public static fieldsToSelect: ModelFieldsFormWorksWith[] = ['content', 'expiryAt'];\r\n\r\n\r\n\r\n  constructor (\r\n    @Optional() protected route: ActivatedRoute,\r\n    @Optional() public dialogRef: MatDialogRef<DropCrudFormComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\r\n    protected _handyNgUserService: HandyNgUserService, \r\n    public handyNgUtilsService: HandyNgUtilsService, \r\n    protected _model: DropNgModel) {\r\n    \r\n    super(_handyNgUserService, handyNgUtilsService, dialogRef, dialogData, route);\r\n    \r\n    this.initExtender();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onValidSubmit(formData: FormDataShape): void {\r\n\r\n    let promise: Promise<void> = (this.isUpdate) ? this._updateEntry(formData) : this._createEntry(formData);\r\n\r\n    promise.then(() => {\r\n\r\n      // TODO Redirect or whatever needs to be done after update;\r\n\r\n      this.closeDialog({ ...formData, ...{ _id: this.updateEntryId }});\r\n\r\n    })\r\n    .catch(err => {\r\n      this._handyNgUserService.redirectToErrPageWithApiErr(err);\r\n    })\r\n\r\n  }\r\n  \r\n  public onInvalidSubmit(formData: FormDataShape): void {\r\n    // console.log(formData)\r\n  }\r\n\r\n  protected _createEntry(formData: FormDataShape): Promise<void> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._model.createOne(formData).subscribe(result => {\r\n\r\n        this.updateEntryId = result.data._id;\r\n        return resolve();\r\n\r\n      }, err => {\r\n        return reject(err);\r\n      })\r\n\r\n    })\r\n\r\n  } \r\n\r\n  protected _updateEntry(formData: FormDataShape): Promise<void> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._model.updatedOne({ _id: this.updateEntryId }, formData, { skipUpdateHistory: false, updateName: 'DropCrudFormComponent form update' }).subscribe(result => {\r\n        return resolve();\r\n      }, err => {\r\n        return reject(err);\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  protected getFormInitData(resolverData: Partial<FormDataShape>): Partial<FormDataShape> {\r\n\r\n    return resolverData;\r\n\r\n  }\r\n  \r\n  createForm(formInitData: Partial<FormDataShape>): FormGroup {\r\n\r\n    let fg: FormGroup = new FormGroup({\r\n      content: new FormControl(formInitData.content, [required('Content is required')], [/* Async validators */]),\r\n      expiryAt: new FormControl(formInitData.expiryAt, [required('Expiration is required')], [/* Async validators */]),\r\n    })\r\n\r\n\r\n  return fg;\r\n  \r\n  }\r\n\r\n\r\n}\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Form resolver                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DropCrudFormComponentResolver implements Resolve<Partial<FormDataShape>>{\r\n\r\n  constructor (protected _model: DropNgModel) {}\r\n\r\n  // Can be used for modal integration\r\n  public getItemData(id: DropModelInterfaces['idType']): Promise<Partial<FormDataShape>> {\r\n\r\n    if (id === undefined) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._model.findById(id, { selectType: 'select', fields: DropCrudFormComponent.fieldsToSelect })\r\n        .subscribe(result => {\r\n\r\n          if (result.data.foundRecord) {\r\n            return resolve(result.data.doc);\r\n          } else {\r\n            return resolve(null);\r\n          }\r\n\r\n        }, err => {\r\n          return resolve(null);\r\n        })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<Partial<FormDataShape>> {\r\n\r\n    return this.getItemData(+route.params['id']);\r\n\r\n  }\r\n\r\n}\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                               Resolver usage                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\n/* -------------------------------- Via route ------------------------------- */\r\n/*\r\n  ...\r\n  import { DropCrudFormComponent, DropCrudFormComponentResolver } from 'path to this file..';\r\n  ...\r\n\r\n  ...\r\n  {\r\n    path: 'route-path/:id',\r\n    component: DropCrudFormComponent,\r\n    resolve: {\r\n      formData: DropCrudFormComponentResolver\r\n    }\r\n  },\r\n  ...\r\n\r\n*/\r\n\r\n/* ------------------------------- Via dialog ------------------------------- */\r\n\r\n/* \r\n\r\n  ...\r\n  import { DropCrudFormComponent, DropCrudFormComponentResolver } from 'path to this file..';\r\n  import { MatDialog } from '@angular/material/dialog';\r\n  ...\r\n\r\n  ...\r\n  constructor (public dialog: MatDialog, private formResolver: DropCrudFormComponentResolver) { }\r\n  ...\r\n\r\n  openDialog(id?: number) {\r\n\r\n    this.formResolver.getItemData(id)\r\n      .then(formData => {\r\n\r\n      const dialogRef = this.dialog.open(DropCrudFormComponent, {\r\n        data: { formData }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log(`Dialog result: ${result}`);\r\n      });\r\n\r\n    })\r\n    .catch(err => {\r\n      // Handle error\r\n    })\r\n\r\n  }\r\n*/\r\n\r\ntype ModelFieldsFormWorksWith = Extract<DropModelInterfaces['allFields'], 'password' | 'content' | 'expiryAt'>;\r\ntype FormDataShape = Pick<DropModelInterfaces['fullModelShape'], ModelFieldsFormWorksWith> & {\r\n}\r\ntype DialogData = {\r\n  formData: Partial<FormDataShape>\r\n}\r\n","<ng-template #formContent>\r\n  <handy-form #formComp [formName]=\"formName\" [formGroup]=\"form\" [rememberState]=\"rememberFormState\"\r\n    [defaultResetBtn]=\"true\" [disablePin]=\"isUpdate\" (validSubmitEvent)=\"onValidSubmit($event)\" [hideFormOptions]=\"true\"\r\n    (invalidSubmitEvent)=\"onInvalidSubmit($event)\" (submitDisabledChange)=\"submitDisabledChange($event)\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px\">\r\n      <!-- Content -->\r\n      <handy-rte-input fxFlex=\"100%\" [formControl]=\"form.get('content')\" fieldName=\"dropCrudForm_content\" placeholder=\"Content\"></handy-rte-input>\r\n\r\n      <!-- Expiration -->\r\n      <handy-date-input class=\"handy-form-input\" [getTime]=\"false\" [showTimeZone]=\"true\" [selectableTimezone]=\"false\" [multiSelect]=\"false\" [formControl]=\"form.get('expiryAt')\" fieldName=\"dropCrudForm_expiryAt\" label=\"Expiration\" placeholder=\"Expiration\"></handy-date-input>\r\n\r\n      <div *ngIf=\"!inDialog\" fxFlex=\"100%\" fxLayout=\"row wrap\" fxLayoutAlign=\"flex-end flex-end\">\r\n\r\n        <div fxFlex=\"100%\" class=\"handy-form-actions-divider\">\r\n          <mat-divider></mat-divider>\r\n        </div>\r\n\r\n        <raised-btn color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Submit\r\n        </raised-btn>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </handy-form>\r\n</ng-template>\r\n\r\n<!-- For handling both, as regular component and as dialog -->\r\n<ng-container *ngIf=\"!inDialog\">\r\n\r\n  <div class=\"handy-form-page-wrapper\">\r\n\r\n    <div class=\"handy-form-wrapper\">\r\n\r\n      <basic-btn icon=\"chevron_left\" [routerLink]=\"[(isUpdate) ? '../../' : '../']\">Back to all</basic-btn>\r\n      <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"inDialog\">\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <basic-btn icon=\"close\" (click)=\"dialogRef.close()\">Cancel</basic-btn>\r\n    <raised-btn color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Submit</raised-btn>\r\n  </mat-dialog-actions>\r\n\r\n</ng-container>","import { ErrorComponent } from 'src/app/pages/error/error.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { setRouteTitle } from '@handy-ng/core';\r\n\r\nimport { DropCrudComponent } from './drop-crud.component';\r\nimport { DropCrudTableComponent } from './drop-crud-table/drop-crud-table.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DropCrudComponent,\r\n    data: {\r\n      pageTitle: setRouteTitle({ title: 'DropCrud management' })\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DropCrudTableComponent, \r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'DropCrud table' })\r\n        },\r\n      },\r\n    ]\r\n  },\r\n  { path: '**', component: ErrorComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DropCrudRoutingModule { }","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { HandyDataTable } from '@handy-ng/extenders/handy-datatable';\r\nimport { HandyNgUserService } from '@handy-ng/services/handy-ng-user.service';\r\nimport { HandyDataTableResult, HandyNgSelectOptions, FilterQuery, MongooseSortingOptions } from '@handy-ng/types';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\nimport { DropNgModel } from '@handy-ng/models/drop.ng-model';\r\nimport { DropModelInterfaces } from '@server-models/drop/model.interface';\r\nimport { DropCrudFormComponent, DropCrudFormComponentResolver } from '../drop-crud-form/drop-crud-form.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'drop-crud-table-table',\r\n  templateUrl: './drop-crud-table.component.html',\r\n  styleUrls: ['./drop-crud-table.component.scss']\r\n})\r\nexport class DropCrudTableComponent extends HandyDataTable<TableDataType, FilterType, DropModelInterfaces> implements OnInit, OnDestroy {\r\n\r\n  public modelFieldsToQuery: DropModelInterfaces['allFields'][] = ['_id', 'content', 'password', 'expiryAt', ];\r\n  public displayedColumns: string[] = ['_id', 'content', 'password', 'expiryAt', 'actions'];\r\n\r\n  public rememberTableState: boolean = true; \r\n  public tableName: string = 'dropCrudTable_table';\r\n\r\n  /* ---------------------------- Optional columns ---------------------------- */\r\n  public optionalColumns: HandyNgSelectOptions[] = [\r\n    {\r\n      value: 'content',\r\n      displayValue: 'Content'\r\n    },\r\n    {\r\n      value: 'password',\r\n      displayValue: 'Password'\r\n    },\r\n    {\r\n      value: 'expiryAt',\r\n      displayValue: 'Expiration'\r\n    },\r\n  ];\r\n  \r\n  /* ---------------------------- Searchable fileds --------------------------- */\r\n  public searchableFields: HandyNgSelectOptions[] = [\r\n    {\r\n      value: '_id',\r\n      displayValue: 'ID'\r\n    },\r\n    {\r\n      value: 'content',\r\n      displayValue: 'Content'\r\n    },\r\n  ];\r\n  \r\n  /* -------------------------------------------------------------------------- */\r\n  /*                              Additional filter                             */\r\n  /* -------------------------------------------------------------------------- */\r\n  public expiryAtFilterOptions: HandyNgSelectOptions[] = [\r\n    {\r\n      value: null,\r\n      displayValue: 'Example value'\r\n    },\r\n  ];\r\n  \r\n\r\n  constructor (\r\n    public dialog: MatDialog, \r\n    private formResolver: DropCrudFormComponentResolver,\r\n    protected _handyNgUserService: HandyNgUserService, \r\n    protected _model: DropNgModel) {\r\n\r\n    super(_handyNgUserService);\r\n    this.initExtender();\r\n\r\n  }\r\n\r\n  public createFilterForm(filterData: FilterType): void {\r\n\r\n    this.filterForm = new FormGroup({\r\n      search: new FormControl(filterData.search),\r\n      searchableFields: new FormControl(filterData.searchableFields),\r\n      displayedColumns: new FormControl(filterData.displayedColumns),\r\n      expiryAt: new FormControl(filterData.expiryAt),\r\n    })\r\n\r\n  }\r\n\r\n  public getData(filterData: FilterType, page: number, limit: number, sort: MongooseSortingOptions<TableDataType>): Promise<HandyDataTableResult<TableDataType>> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      let { search = '', searchableFields } = filterData;\r\n        \r\n      this._model.search(\r\n        search,\r\n        searchableFields,\r\n        { selectType: 'select', fields: this.modelFieldsToQuery },\r\n        this.getFindOptions(page, limit, sort),\r\n        this.getAdditionalSearchQueries(filterData),\r\n        this.getAdditionalFilterQueries(filterData)\r\n      )\r\n        .subscribe(result => {\r\n\r\n          let { docs, paginationData } = result.data;\r\n\r\n          return resolve({\r\n            dataSource: new MatTableDataSource(docs as any),\r\n            pageIndex: paginationData.page,\r\n            itemsCount: paginationData.totalRecordsCount\r\n          });\r\n\r\n        }, err => {\r\n\r\n          return reject(err);\r\n\r\n        })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  // For queries that are not included in default handy model search functionality\r\n  protected getAdditionalSearchQueries(filterData: FilterType): FilterQuery<DropModelInterfaces['fullModelShape']>[] {\r\n    return [];\r\n  }\r\n\r\n  // For additional filters\r\n  protected getAdditionalFilterQueries(filterData: FilterType): FilterQuery<DropModelInterfaces['fullModelShape']>[] {\r\n\r\n    let additionalFilterQueries: FilterQuery<DropModelInterfaces['fullModelShape']>[] = [];\r\n    \r\n    let { expiryAt, } = filterData;\r\n\r\n      // Expiration filter\r\n    if (expiryAt !== null && expiryAt !== undefined) {\r\n      additionalFilterQueries.push({\r\n        expiryAt\r\n      })\r\n    }\r\n    \r\n    return additionalFilterQueries;\r\n\r\n  }\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                              Actions methods                               */\r\n  /* -------------------------------------------------------------------------- */\r\n  public editOrCreateAction(id?: number): void {\r\n\r\n    if (id) {\r\n\r\n      this.formResolver.getItemData(id)\r\n        .then(formData => {\r\n\r\n        const dialogRef = this.dialog.open(DropCrudFormComponent, {\r\n          data: { formData }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log(`Dialog result: ${result}`);\r\n          this.refreshTableData();\r\n        });\r\n\r\n      })\r\n\r\n      return;\r\n\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(DropCrudFormComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n      this.refreshTableData();\r\n    });\r\n\r\n  }\r\n\r\n  public removeEntryAction(id: number): void {\r\n\r\n    this._model.deleteById(id).subscribe(deleteResult => {\r\n\r\n      // TODO do whatever you need to do after removing\r\n      this.refreshTableData();\r\n      console.log(deleteResult);\r\n\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n}\r\n\r\ntype ModelFieldsToQuery = Extract<DropModelInterfaces['allFields'], '_id' | 'content' | 'password' | 'expiryAt' | 'actions'>;\r\ntype TableDataType = Pick<DropModelInterfaces['fullModelShape'], ModelFieldsToQuery> & {\r\n  actions: null,\r\n}\r\n\r\n\r\ninterface FilterType {\r\n  search: string,\r\n  searchableFields: DropModelInterfaces['searchableFields'][],\r\n  displayedColumns: string[],\r\n  expiryAt: DropModelInterfaces['fullModelShape']['expiryAt']\r\n}","<div class=\"crud-table-page-wrapper\">\r\n  <div [class]=\"(expanded) ? 'expanded-crud-table-wrapper' : 'crud-table-wrapper'\">\r\n\r\n    <div class=\"crud-table-actions-bar\">\r\n\r\n      <raised-btn icon=\"add\" color=\"primary\" (click)=\"editOrCreateAction()\">New entry</raised-btn>\r\n\r\n\r\n      <handy-form #tableFilter class=\"crud-table-filters-form\" [hideFormOptions]=\"true\">\r\n        <div class=\"crud-table-search-bar\">\r\n\r\n          <handy-text-input #searchInput class=\"crud-table-search-input\" [formControl]=\"filterForm.get('search')\"\r\n            label=\"Search\" placeholder=\"Search\">\r\n          </handy-text-input>\r\n\r\n          <handy-multi-select-input #searchableFieldsSelect class=\"crud-table-searchable-fields-input\"\r\n            [formControl]=\"filterForm.get('searchableFields')\" label=\"Search fields\" placeholder=\"Search fields\">\r\n          </handy-multi-select-input>\r\n        </div>\r\n\r\n        <div class=\"crud-table-filters-btns-wrapper\">\r\n\r\n          <div class=\"crud-table-filters-btns\">\r\n\r\n            <stroked-btn #filtersToggle color=\"primary\" icon=\"filter_list\">{{ (filtersToggleState) ? 'Hide' : 'Show'}}\r\n              filters</stroked-btn>\r\n            <stroked-btn #clearFilters color=\"warn\" icon=\"refresh\">Reset filters</stroked-btn>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <handy-table-filters>\r\n          <handy-multi-select-input #optionalColumnsSelect class=\"crud-table-filter-input\"\r\n            [formControl]=\"filterForm.get('displayedColumns')\" label=\"Diplay columns\" placeholder=\"Diplay columns\">\r\n          </handy-multi-select-input>\r\n\r\n          <handy-select-input class=\"crud-table-filter-input\" [formControl]=\"filterForm.get('expiryAt')\"\r\n            label=\"Expiration\" placeholder=\"Expiration\" [options]=\"expiryAtFilterOptions\" [hasEmptyOption]=\"true\"\r\n            emptyOptionLabel=\"Any\"></handy-select-input>\r\n\r\n        </handy-table-filters>\r\n\r\n      </handy-form>\r\n\r\n\r\n\r\n    </div> \r\n\r\n    <handy-table>\r\n\r\n      <mat-table [dataSource]=\"dataSource\" matSort cdkDropList cdkDropListOrientation=\"horizontal\"\r\n        (cdkDropListDropped)=\"drop($event)\">\r\n\r\n        <ng-container matColumnDef=\"_id\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Id</basic-btn>\r\n            </span>Id</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element._id}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"content\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Content</basic-btn>\r\n            </span>Content</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.content}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"password\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Password</basic-btn>\r\n            </span>Password</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.password}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"expiryAt\">\r\n\r\n          <mat-header-cell *matHeaderCellDef cdkDrag cdkDragLockAxis=\"x\" mat-sort-header><span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Expiration</basic-btn>\r\n            </span>Expiration</mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let element\">{{element.expiryAt}}</mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n\r\n          <mat-header-cell *matHeaderCellDef class=\"crud-table-actions-col\" cdkDrag cdkDragLockAxis=\"x\" mat-sort-header>\r\n            <span *cdkDragPreview>\r\n              <basic-btn icon=\"swap_horiz\">Actions</basic-btn>\r\n            </span>Actions</mat-header-cell>\r\n\r\n          <mat-cell class=\"crud-table-actions-col\" *matCellDef=\"let element\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"flex-end center\" fxLayoutGap=\"8px\">\r\n              <stroked-btn icon=\"edit\" color=\"primary\" (click)=\"editOrCreateAction(element._id)\">Edit</stroked-btn>\r\n              <stroked-btn icon=\"delete_otl\" color=\"warn\" (confirmClick)=\"removeEntryAction(element._id)\">Remove\r\n              </stroked-btn>\r\n\r\n            </div>\r\n\r\n          </mat-cell>\r\n\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n      </mat-table>\r\n\r\n    </handy-table>\r\n\r\n    <handy-table-paginator></handy-table-paginator>\r\n\r\n    <div fxHide.lt-lg class=\"table-expand-btn\">\r\n\r\n      <icon-btn (click)=\"toogleExpandedState()\" [matTooltip]=\"(expanded) ? 'Shrink table' : 'Expand table'\"\r\n        [icon]=\"(expanded) ? 'west' : 'east'\"></icon-btn>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'drop-crud',\r\n  templateUrl: './drop-crud.component.html',\r\n  styleUrls: ['./drop-crud.component.scss']\r\n})\r\nexport class DropCrudComponent {}","<handy-nav-layout>\n  <router-outlet></router-outlet>\n</handy-nav-layout>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/modules/shared/shared.module';\r\nimport { HandyFormModule } from '@handy-ng/modules/handy-form/handy-form.module';\r\nimport { HandyTableModule } from '@handy-ng/modules/handy-table/handy-table.module';\r\n\r\nimport { DropCrudRoutingModule } from './drop-crud-routing.module';\r\nimport { DropCrudComponent } from './drop-crud.component';\r\nimport { DropCrudFormComponent } from './drop-crud-form/drop-crud-form.component';\r\nimport { DropCrudTableComponent } from './drop-crud-table/drop-crud-table.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DropCrudComponent,\r\n    DropCrudFormComponent,\r\n    DropCrudTableComponent,\r\n  ],\r\n  imports: [\r\n    HandyFormModule,\r\n    HandyTableModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    DropCrudRoutingModule\r\n  ]\r\n})\r\nexport class DropCrudModule { }\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Lazy loading                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\n/*\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./modules/drop-crud/drop-crud.module').then(m => m.DropCrudModule),\r\n  },\r\n\r\n*/"],"sourceRoot":"webpack:///"}