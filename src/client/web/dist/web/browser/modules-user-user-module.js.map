{"version":3,"sources":["./src/app/guards/condition-functions/complete-registration.ts","./src/app/modules/user/components/user-profile/user-profile.component.ts","./src/app/modules/user/components/user-profile/user-profile.component.html","./src/app/modules/user/pages/complete-registration/complete-registration.component.ts","./src/app/modules/user/pages/complete-registration/complete-registration.component.html","./src/app/modules/user/user-routing.module.ts","./src/app/modules/user/user.component.ts","./src/app/modules/user/user.component.html","./src/app/modules/user/user.module.ts"],"names":[],"mappings":"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","file":"modules-user-user-module.js","sourcesContent":["import { HandyNgUserService } from '@handy-ng/services';\r\nimport { UserGuardCustomFn } from '../user.guard';\r\nimport { UrlTree, RouterStateSnapshot, Router, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\nexport const CompletRegistrationGuardCondition: UserGuardCustomFn = (userService: HandyNgUserService, next: ActivatedRouteSnapshot, state: RouterStateSnapshot, router: Router): true | UrlTree => {\r\n\r\n  let { completeProfile } = userService.userData;\r\n\r\n  if (!completeProfile) {\r\n    return true;\r\n  }\r\n\r\n  return router.parseUrl('/error?code=403');\r\n\r\n}","import { HandyAutoCompleteData, HandyNgSelectOptionsData, HandyNgRadioGroupOptionsData, HandyNgSelectOptions, PasswordStrengthResult } from '@handy-ng/types';\r\nimport { HandyNgUserService, HandyNgUtilsService, HandyNgLayoutService } from '@handy-ng/services';\r\nimport { Component, OnInit, Optional, Inject, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { HandyMemoryStateForm } from '@handy-ng/extenders/handy-memory-state-form';\r\n\r\nimport { UserNgModel } from '@handy-ng/models/user.ng-model';\r\nimport { UserModelInterfaces } from '@server-models/user/model.interface';\r\nimport { Injectable } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { required, email, password } from '@ng-shared/form-validators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'user-profile-form',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.scss']\r\n})\r\nexport class UserProfileComponent extends HandyMemoryStateForm<FormDataShape> implements OnDestroy {\r\n\r\n  public form: FormGroup;\r\n  public formName = 'userProfile';\r\n  public rememberFormState: boolean = false;\r\n\r\n  public newEmail: string;\r\n  public passwordStrengthHelp: PasswordStrengthResult;\r\n\r\n  public updateEntryId: number;\r\n\r\n  protected _userChangeSub: Subscription;\r\n\r\n  constructor (\r\n    @Optional() public dialogRef: MatDialogRef<UserProfileComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\r\n    protected _router: Router,\r\n    protected _route: ActivatedRoute,\r\n    protected _handyNgUserService: HandyNgUserService,\r\n    public handyNgUtilsService: HandyNgUtilsService,\r\n    protected _model: UserNgModel) {\r\n\r\n    super(_handyNgUserService, handyNgUtilsService);\r\n\r\n    this.initExtender();\r\n\r\n    this._userChangeSub = this._handyNgUserService.userChange().subscribe(() => {\r\n      this._refreshFormData();\r\n    })\r\n\r\n  }\r\n\r\n  protected _refreshFormData(): void {\r\n    this.form.setValue(this.getFormInitData());\r\n  }\r\n\r\n  public onValidSubmit(formData: FormDataShape): void {\r\n\r\n    let { email, password = null, name } = formData;\r\n\r\n    let DTO: Partial<UserModelInterfaces['fullModelShape']> = {\r\n      email,\r\n      name\r\n    }\r\n\r\n    if (password) {\r\n      DTO.password = password;\r\n    }\r\n\r\n    this._model.updatedOne({ _id: this.updateEntryId }, DTO, { skipUpdateHistory: false, updateName: 'UserProfile form update' })\r\n      .subscribe(result => {\r\n\r\n        this._handyNgUserService.refreshUserData(() => {\r\n\r\n          if (!this.inDialog) {\r\n            this._refreshFormData();\r\n            this._handyNgUserService.notify.simpleMsgNotification({ headline: 'Your profile was updated'});\r\n          }\r\n\r\n          this.closeDialog({ ...formData, ...{ _id: this.updateEntryId } });\r\n\r\n        })\r\n\r\n      }, err => {\r\n\r\n        this._handyNgUserService.notify.apiErrNotification(err, 'Profile upload');\r\n\r\n      })\r\n\r\n  }\r\n\r\n  getFormInitData(): Partial<FormDataShape> {\r\n\r\n    let { email, name, newEmail, _id } = this._handyNgUserService.userData;\r\n    this.updateEntryId = _id;\r\n\r\n    this.newEmail = newEmail;\r\n\r\n    return {\r\n      email,\r\n      name,\r\n      password: null\r\n    };\r\n\r\n  }\r\n\r\n  createForm(formInitData: Partial<FormDataShape>): FormGroup {\r\n\r\n    let fg: FormGroup = new FormGroup({\r\n      email: new FormControl(formInitData.email, [required('Email is required'), email()], [this._model.uniqueValidator('email', 'This email is taken', formInitData.email, 'all')]),\r\n      password: new FormControl(null, [password(this.handyNgUtilsService)], [/* Async validators */]),\r\n      name: new FormControl(formInitData.name, [required('Name is required')], [/* Async validators */]),\r\n    })\r\n\r\n    return fg;\r\n\r\n  }\r\n\r\n  public asignGeneratedPassword(newPassword: string): void {\r\n    this.form.get('password').setValue(newPassword);\r\n  }\r\n\r\n  public sendVerificationEmail(): void {\r\n\r\n    this._handyNgUserService.requestAuthEmail(this.newEmail, 'verify')\r\n      .then(() => {\r\n\r\n        this._handyNgUserService.notify.simpleMsgNotification({\r\n          headline: 'Verification email sent',\r\n          msg: `Check ${this.newEmail} inbox to verify your new account email`\r\n        })\r\n\r\n      })\r\n      .catch(err => {\r\n        this._handyNgUserService.notify.apiErrNotification(err, 'Verification email');\r\n      })\r\n\r\n  }\r\n\r\n  public cancelEmailChange(): void {\r\n\r\n    this._model.updatedOne({ _id: this.updateEntryId }, { newEmail: null, emailVerificationHash: null }, { skipUpdateHistory: false, updateName: 'Email change cancelation' })\r\n      .subscribe(result => {\r\n\r\n        this._handyNgUserService.refreshUserData(() => {\r\n\r\n          if (!this.inDialog) {\r\n            this._refreshFormData();\r\n            this._handyNgUserService.notify.simpleMsgNotification({ headline: 'Email change was canceled' });\r\n          }\r\n\r\n        })\r\n\r\n      }, err => {\r\n\r\n        this._handyNgUserService.notify.apiErrNotification(err, 'Canceling email change');\r\n\r\n      })\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.handyNgUtilsService.unsubscribeAll([\r\n      this._userChangeSub\r\n    ])\r\n\r\n  }\r\n}\r\n\r\ntype ModelFieldsFormWorksWith = Extract<UserModelInterfaces['allFields'], 'email' | 'name' | 'password'>;\r\ntype FormDataShape = Pick<UserModelInterfaces['fullModelShape'], ModelFieldsFormWorksWith> & {\r\n\r\n}\r\ntype DialogData = {\r\n  formData: Partial<FormDataShape>\r\n}\r\n","<ng-template #formContent>\r\n\r\n  <handy-form #formComp [formName]=\"formName\" [formGroup]=\"form\" [rememberState]=\"rememberFormState\"\r\n    [allowFullScreen]=\"true\" [defaultResetBtn]=\"false\" [disablePin]=\"true\" (validSubmitEvent)=\"onValidSubmit($event)\"\r\n    (invalidSubmitEvent)=\"onInvalidSubmit($event)\" (submitDisabledChange)=\"submitDisabledChange($event)\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px\">\r\n      <h3 fxFlex=\"100%\">Your profile</h3>\r\n\r\n      <div fxFlex=\"100%\">\r\n\r\n        <!-- Email -->\r\n        <handy-text-input class=\"handy-form-input\" formControlName=\"email\" fieldName=\"userProfile_email\" label=\"Email\"\r\n          placeholder=\"Email\"></handy-text-input>\r\n  \r\n        <div *ngIf=\"newEmail\">\r\n  \r\n          <p>{{ newEmail }} has to be verified before being used as your account email.</p>\r\n\r\n          <div fxLayout fxLayoutGap=\"8px\">\r\n            <stroked-btn icon=\"send\" (click)=\"sendVerificationEmail()\">Resend verification email</stroked-btn>\r\n            <stroked-btn color=\"warn\" icon=\"close\" (click)=\"cancelEmailChange()\">Cancel email change</stroked-btn>\r\n          </div>\r\n  \r\n  \r\n        </div>\r\n        \r\n      </div>\r\n\r\n      <div fxFlex=\"100%\" fxLayout=\"row wrap\" fxLayoutGap.gt-xs=\"16px\" fxLayoutAlign=\"flex-start flex-start\">\r\n\r\n        <!-- Password -->\r\n        <handy-password-input class=\"handy-form-input\" [autofill]=\"false\" fieldName=\"userProfile_password\" formControlName=\"password\"\r\n          label=\"New password\" (passwordStrength)=\"passwordStrengthHelp = $event\" placeholder=\"Strong password\">\r\n        </handy-password-input>\r\n  \r\n        <password-hint (generatedPassword)=\"asignGeneratedPassword($event)\" [passwordStrengt]=\"passwordStrengthHelp\">\r\n        </password-hint>\r\n\r\n      </div>\r\n\r\n\r\n      <!-- Name -->\r\n      <handy-text-input formControlName=\"name\" fieldName=\"userProfile_name\" label=\"Name\" placeholder=\"Name\">\r\n      </handy-text-input>\r\n\r\n      <form-actions-bar *ngIf=\"!inDialog\">\r\n      \r\n        <raised-btn color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Update profile\r\n        </raised-btn>\r\n      \r\n      </form-actions-bar>\r\n\r\n    </div>\r\n\r\n\r\n  </handy-form>\r\n</ng-template>\r\n\r\n<!-- For handling both, as regular component and as dialog -->\r\n<ng-container *ngIf=\"!inDialog\">\r\n\r\n  <div class=\"handy-form-page-wrapper\">\r\n  \r\n    <div class=\"handy-form-wrapper\">\r\n  \r\n      <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n  \r\n    </div>\r\n  \r\n  </div>\r\n  \r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"inDialog\">\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <flat-btn (click)=\"dialogRef.close()\">Cancel</flat-btn>\r\n    <raised-btn color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Update profile</raised-btn>\r\n  </mat-dialog-actions>\r\n\r\n</ng-container>","import { HandyAutoCompleteData, HandyNgSelectOptionsData, HandyNgRadioGroupOptionsData, HandyNgSelectOptions } from '@handy-ng/types';\r\nimport { HandyNgUserService, HandyNgUtilsService, HandyNgLayoutService } from '@handy-ng/services';\r\nimport { Component, OnInit, Optional, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { HandyMemoryStateForm } from '@handy-ng/extenders/handy-memory-state-form';\r\n\r\nimport { UserNgModel } from '@handy-ng/models/user.ng-model';\r\nimport { UserModelInterfaces } from '@server-models/user/model.interface';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { required } from '@ng-shared/form-validators';\r\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'complete-registration-form',\r\n  templateUrl: './complete-registration.component.html',\r\n  styleUrls: ['./complete-registration.component.scss']\r\n})\r\nexport class CompleteRegistrationComponent extends HandyMemoryStateForm<FormDataShape> implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public formName = 'completeRegistration';\r\n  public rememberFormState: boolean = true;\r\n  public defaultFormStateVal: FormDataShape = {\r\n    preferences: {\r\n      preferences: null\r\n    },\r\n    userProfile: {\r\n      name: this._handyNgUserService.userData.name\r\n    }\r\n  }\r\n\r\n  private _stepperStateName: string = 'completeRegistrationComponent_stepper_index';\r\n  public stepIndex: number = this._handyNgUserService.getStateVal(this._stepperStateName, 0);\r\n\r\n  constructor (\r\n    @Optional() public dialogRef: MatDialogRef<CompleteRegistrationComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\r\n    protected _handyNgUserService: HandyNgUserService,\r\n    public handyNgUtilsService: HandyNgUtilsService,\r\n    public handyNgLayoutService: HandyNgLayoutService,\r\n    protected _router: Router,\r\n    protected _model: UserNgModel) {\r\n\r\n    super(_handyNgUserService, handyNgUtilsService);\r\n\r\n    this.initExtender();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onValidSubmit(formData: FormDataShape): void {\r\n\r\n    // ? Preferrences are updated via HandyNgLayoutService...\r\n\r\n    let { userProfile } = formData;\r\n\r\n    let DTU: Partial<UserModelInterfaces['fullModelShape']> = {\r\n      completeProfile: true,\r\n      name: formData.userProfile.name,\r\n    }\r\n\r\n    this._model.updatedOne({ _id: this._handyNgUserService.userData._id }, DTU, { skipUpdateHistory: false, updateName: 'CompleteRegistration form update' })\r\n      .subscribe(result => {\r\n\r\n        this._handyNgUserService.refreshUserData(() => {\r\n\r\n          this._handyNgUserService.resetStateVal(this._stepperStateName);\r\n\r\n          this._router.navigate(['/dashboard']);        \r\n          this.closeDialog({ ...formData, ...{ _id: this._handyNgUserService.userData._id } });\r\n          this._handyNgUserService.notify.simpleMsgNotification({\r\n            msg: 'Your registration was completed'\r\n          })\r\n\r\n        })\r\n\r\n      }, err => {\r\n        this._handyNgUserService.redirectToErrPageWithApiErr(err);\r\n      })\r\n\r\n  }\r\n\r\n  getFormInitData(resolverData?: Partial<FormDataShape>): Partial<FormDataShape> {\r\n\r\n    return {};\r\n\r\n  }\r\n\r\n  createForm(formInitData: Partial<FormDataShape>): FormGroup {\r\n\r\n    let { userProfile } = formInitData;\r\n\r\n    let fg: FormGroup = new FormGroup({\r\n      // Just an placeholder, stepper needs control...\r\n      preferences: new FormControl(null),\r\n      userProfile: new FormGroup({\r\n        name: new FormControl(userProfile.name, [required('Name is required')], [/* Async validators */]),\r\n      })      \r\n    })\r\n\r\n    return fg;\r\n\r\n  }\r\n\r\n  public stepChange(event: StepperSelectionEvent): void {\r\n    this._handyNgUserService.saveStateVal(this._stepperStateName, event.selectedIndex);\r\n  }\r\n\r\n\r\n}\r\n\r\ntype FormDataShape = {\r\n  preferences: {\r\n    preferences: any,\r\n  },\r\n  userProfile: {\r\n    name: UserModelInterfaces['fullModelShape']['name']\r\n  }\r\n}\r\ntype DialogData = {\r\n  formData: Partial<FormDataShape>\r\n}\r\n","<ng-template #formContent>\r\n\r\n  <div>\r\n\r\n    <handy-form #formComp [formName]=\"formName\" [formGroup]=\"form\" [rememberState]=\"rememberFormState\"\r\n    [defaultResetBtn]=\"false\" [disablePin]=\"true\" (validSubmitEvent)=\"onValidSubmit($event)\" [hideFormOptions]=\"true\"\r\n    (invalidSubmitEvent)=\"onInvalidSubmit($event)\" (submitDisabledChange)=\"submitDisabledChange($event)\">\r\n    \r\n    <div fxLayout=\"column\" fxLayoutGap=\"8px\" class=\"handy-complete-reg-form-content\">\r\n      \r\n      <h1 class=\"handy-complete-reg-form-title\">Complete your registration</h1>\r\n      <mat-vertical-stepper #stepper linear (selectionChange)=\"stepChange($event)\" [selectedIndex]=\"stepIndex\">\r\n\r\n          <!-- First step -->\r\n          <mat-step [stepControl]=\"form.get('preferences')\">\r\n            <ng-template matStepLabel>Preferences</ng-template>\r\n\r\n            <user-preferences-form [isInCompleteRegistrationsSteps]=\"true\"></user-preferences-form>\r\n\r\n            <div>\r\n              <!-- <basic-btn icon=\"chevron_right\" (click)=\"stepper.next()\">Next step</basic-btn> -->\r\n              <flat-btn icon=\"chevron_right\" (click)=\"stepper.next()\">Next step</flat-btn>\r\n\r\n            </div>\r\n\r\n          </mat-step>\r\n\r\n          <!-- Second step -->\r\n          <mat-step [stepControl]=\"form.get('userProfile')\" formGroupName=\"userProfile\">\r\n            <ng-template matStepLabel>Profile details</ng-template>\r\n\r\n            <!-- Name -->\r\n            <handy-text-input formControlName=\"name\" fieldName=\"completeRegistration_name\" label=\"Name\"\r\n              placeholder=\"Name\"></handy-text-input>\r\n\r\n            <div>\r\n\r\n              <!-- <basic-btn icon=\"chevron_left\" (click)=\"stepper.previous()\">Step back</basic-btn> -->\r\n              <div class=\"handy-complet-registration-form-actions\">\r\n                <flat-btn icon=\"chevron_left\" (click)=\"stepper.previous()\">Step back</flat-btn>\r\n                <flat-btn *ngIf=\"!inDialog\" icon=\"check_circle\" color=\"primary\" [disabled]=\"submitDisabled\"\r\n                  (click)=\"triggerSubmit()\">Complete registration</flat-btn>\r\n              </div>\r\n            </div>\r\n\r\n          </mat-step>\r\n\r\n        </mat-vertical-stepper>\r\n\r\n        <!-- <raised-btn *ngIf=\"!inDialog\" icon=\"exit_to_app\" color=\"warn\" routerLink=\"/logout\">Log out</raised-btn> -->\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <stroked-btn *ngIf=\"!inDialog\" icon=\"exit_to_app\" color=\"warn\" routerLink=\"/logout\" class=\"auth-home-page\">Log\r\n          out</stroked-btn>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n    </handy-form>\r\n\r\n  </div>\r\n\r\n</ng-template>\r\n\r\n\r\n<!-- For handling both, as regular component and as dialog -->\r\n<ng-container *ngIf=\"!inDialog\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"complete-registration-page-wrapper\">\r\n\r\n    <div class=\"complete-registration-form-wrapper\">\r\n\r\n      <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"inDialog\">\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <raised-btn icon=\"exit_to_app\" color=\"warn\" (click)=\"dialogRef.close()\" routerLink=\"/logout\">Log out</raised-btn>&nbsp;\r\n    <raised-btn icon=\"check_circle\" color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Complete\r\n      registration</raised-btn>\r\n  </mat-dialog-actions>\r\n\r\n</ng-container>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserComponent } from './user.component';\r\nimport { UserGuard } from 'src/app/guards/user.guard';\r\nimport { CompleteRegistrationComponent } from './pages/complete-registration/complete-registration.component';\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\nimport { UserPreferencesComponent } from './components/user-preferences/user-preferences.component';\r\nimport { CompletRegistrationGuardCondition } from 'src/app/guards/condition-functions/complete-registration';\r\nimport { setRouteTitle } from '@handy-ng/services';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: '', \r\n    component: UserComponent,\r\n    canActivate: [UserGuard],\r\n    canActivateChild: [UserGuard],\r\n    data: {\r\n      pageTitle: setRouteTitle({ title: 'User settings' })\r\n    },\r\n    children: [\r\n      {\r\n        path: 'profile',\r\n        component: UserProfileComponent,\r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'User profile' })\r\n        },\r\n      },\r\n      {\r\n        path: 'preferences',\r\n        component: UserPreferencesComponent,\r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'User preferences' })\r\n        },\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'complete-registration',\r\n    component: CompleteRegistrationComponent,\r\n    canActivate: [UserGuard.condition({ fn: CompletRegistrationGuardCondition })],\r\n    data: {\r\n      pageTitle: setRouteTitle({ title: 'Complete your registration', preppendToProjName: true, projNameSeparator: 'on' })\r\n    },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<handy-nav-layout>\r\n  <router-outlet></router-outlet>\r\n</handy-nav-layout>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { UserComponent } from './user.component';\r\nimport { SharedModule } from '@ng-shared/shared.module';\r\nimport { HandyFormModule } from '@handy-ng/modules/handy-form/handy-form.module';\r\nimport { CompleteRegistrationComponent } from './pages/complete-registration/complete-registration.component';\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\nimport { UserPreferencesComponent } from './components/user-preferences/user-preferences.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserComponent,\r\n    CompleteRegistrationComponent,\r\n    UserProfileComponent,\r\n    UserPreferencesComponent\r\n    ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    HandyFormModule,\r\n    UserRoutingModule\r\n  ],\r\n})\r\nexport class UserModule { }\r\n"],"sourceRoot":"webpack:///"}