{"version":3,"sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.component.ts","./src/app/modules/auth/auth.component.html","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/components/forms/email-request/email-request.component.ts","./src/app/modules/auth/components/forms/email-request/email-request.component.html","./src/app/modules/auth/components/forms/login/login.component.ts","./src/app/modules/auth/components/forms/login/login.component.html","./src/app/modules/auth/components/forms/password-reset/password-reset.component.ts","./src/app/modules/auth/components/forms/password-reset/password-reset.component.html","./src/app/modules/auth/components/forms/register/register.component.ts","./src/app/modules/auth/components/forms/register/register.component.html","./src/app/modules/auth/pages/auth-message/auth-message.component.ts","./src/app/modules/auth/pages/auth-message/auth-message.component.html"],"names":[],"mappings":"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","file":"modules-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './components/forms/login/login.component';\r\nimport { RegisterComponent } from './components/forms/register/register.component';\r\nimport { AuthMessageComponent } from './pages/auth-message/auth-message.component';\r\nimport { EmailRequestComponent } from './components/forms/email-request/email-request.component';\r\nimport { PasswordResetComponent } from './components/forms/password-reset/password-reset.component';\r\nimport { UserGuard } from 'src/app/guards/user.guard';\r\nimport { setRouteTitle } from '@handy-ng/services';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    data: {\r\n      pageTitle: setRouteTitle({ title: 'Auth', preppendToProjName: true }),\r\n    },\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        canActivate: [UserGuard.condition({ notLoggedInOnly: true })],\r\n        component: LoginComponent,\r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'Login', preppendToProjName: true }),\r\n        }\r\n      },\r\n      {\r\n        path: 'register',\r\n        canActivate: [UserGuard.condition({ notLoggedInOnly: true })],\r\n        component: RegisterComponent,\r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'Register', preppendToProjName: true }),\r\n        }\r\n      },\r\n      {\r\n        path: 'auth-msg',\r\n        component: AuthMessageComponent,\r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'Auth message' }),\r\n        }\r\n      },\r\n      {\r\n        path: 'email-request/:action',\r\n        canActivate: [UserGuard.condition({ notLoggedInOnly: true })],\r\n        component: EmailRequestComponent,\r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'Auth request' }),\r\n        }\r\n      },\r\n      {\r\n        path: 'password-reset/:email/:hash',\r\n        canActivate: [UserGuard.condition({ notLoggedInOnly: true })],\r\n        component: PasswordResetComponent,\r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'New password', preppendToProjName: true, projNameSeparator: 'for' }),\r\n        }\r\n      },\r\n      {\r\n        path: 'invitation-password-set/:email/:hash',\r\n        canActivate: [UserGuard.condition({ notLoggedInOnly: true })],\r\n        component: PasswordResetComponent,\r\n        data: {\r\n          pageTitle: setRouteTitle({ title: 'New password', preppendToProjName: true, projNameSeparator: 'for' }),\r\n        }\r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: AuthMessageComponent,\r\n        data: {\r\n          action: 'logout',\r\n          pageTitle: setRouteTitle({ title: 'Logout', preppendToProjName: true }),\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"auth-page mat-app-background\">\r\n\r\n  <div class=\"auth-card\" >\r\n\r\n    <mat-card class=\"\">\r\n  \r\n      <mat-card-content>\r\n\r\n        <div class=\"logo-side-nav\">\r\n          <img src=\"/assets/logo.png\" alt=\"logo\">\r\n        </div>\r\n\r\n\r\n        <router-outlet></router-outlet>\r\n      </mat-card-content>\r\n      \r\n    </mat-card>\r\n    \r\n    \r\n  </div>\r\n  <stroked-btn color=\"primary\" icon=\"home\" routerLink=\"/\" class=\"auth-home-page\">Go to Home</stroked-btn>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { AuthComponent } from './auth.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { HandyFormModule } from '@handy-ng/modules/handy-form/handy-form.module';\r\nimport { LoginComponent } from './components/forms/login/login.component';\r\nimport { RegisterComponent } from './components/forms/register/register.component';\r\nimport { AuthMessageComponent } from './pages/auth-message/auth-message.component';\r\nimport { EmailRequestComponent } from './components/forms/email-request/email-request.component';\r\nimport { PasswordResetComponent } from './components/forms/password-reset/password-reset.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AuthMessageComponent,\r\n    EmailRequestComponent,\r\n    PasswordResetComponent\r\n  ],\r\n  imports: [\r\n    HandyFormModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    AuthRoutingModule\r\n  ],\r\n  entryComponents: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    EmailRequestComponent,\r\n    PasswordResetComponent\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { HandyAutoCompleteData, HandyNgSelectOptionsData, HandyNgRadioGroupOptionsData, HandyNgSelectOptions, EmailRequestAction } from '@handy-ng/types';\r\nimport { HandyNgUserService, HandyNgUtilsService } from '@handy-ng/services';\r\nimport { Component, OnInit, Optional, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { HandyMemoryStateForm } from '@handy-ng/extenders/handy-memory-state-form';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { required, email } from '@ng-shared/form-validators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserNgModel } from '@handy-ng/models/user.ng-model';\r\n\r\n@Component({\r\n  selector: 'email-request-form',\r\n  templateUrl: './email-request.component.html',\r\n  styleUrls: ['./email-request.component.scss']\r\n})\r\nexport class EmailRequestComponent extends HandyMemoryStateForm<FormDataShape> implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public formName = 'emailRequest';\r\n  public rememberFormState: boolean = false;\r\n\r\n  public action: EmailRequestAction;\r\n  public actionsList: EmailRequestAction[] = [\r\n    'passwordReset', 'unlock', 'verify'\r\n  ];\r\n\r\n  public headline: EmailRequestActionStrings = {\r\n    passwordReset: 'Password reset link',\r\n    unlock: 'Unlock account link',\r\n    verify: 'Verify email link'\r\n  };\r\n\r\n  constructor (\r\n    @Optional() public dialogRef: MatDialogRef<EmailRequestComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\r\n    protected _route: ActivatedRoute,\r\n    protected _router: Router,\r\n    protected _userModel: UserNgModel,\r\n    protected _handyNgUserService: HandyNgUserService,\r\n    public handyNgUtilsService: HandyNgUtilsService,) {\r\n\r\n    super(_handyNgUserService, handyNgUtilsService);\r\n\r\n    this.initExtender();\r\n\r\n    let action: EmailRequestAction = this._route.snapshot.params['action'];\r\n    if (!this.actionsList.includes(action)) {\r\n      this._handyNgUserService.redirectToErrPage('404');\r\n    }\r\n\r\n    this.action = action;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.form.get('accountEmail').value) {\r\n\r\n      setTimeout(() => {\r\n        this.showErrs();\r\n      }, 1500);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  public onValidSubmit(formData: FormDataShape): void {\r\n\r\n    let { accountEmail } = formData;\r\n    this._handyNgUserService.requestAuthEmail(accountEmail, this.action)\r\n    .then(() => {\r\n\r\n      this._router.navigate(['auth-msg'], { queryParams: { email: accountEmail, action: this.action } });\r\n\r\n    })\r\n    .catch(err => {\r\n      this._handyNgUserService.redirectToErrPageWithApiErr(err);\r\n    })\r\n\r\n  }\r\n\r\n  public onInvalidSubmit(formData: FormDataShape): void {\r\n    // console.log(formData)\r\n  }\r\n\r\n  getFormInitData(): Partial<FormDataShape> {\r\n\r\n    return {\r\n      accountEmail: this._route.snapshot.queryParams['email']\r\n    };\r\n\r\n  }\r\n\r\n  createForm(formInitData: Partial<FormDataShape>): FormGroup {\r\n\r\n    let fg: FormGroup = new FormGroup({\r\n      accountEmail: new FormControl(formInitData.accountEmail, [email(), required('Email is required')], [this._userModel.mustExistValidator('email', 'Unknown account')])\r\n    })\r\n\r\n    return fg;\r\n\r\n  }\r\n\r\n}\r\n\r\ntype FormDataShape = {\r\n\r\n  accountEmail: string\r\n\r\n}\r\ntype DialogData = {\r\n  formData: Partial<FormDataShape>\r\n}\r\n\r\ntype EmailRequestActionStrings = { [key in EmailRequestAction]: string };\r\n","<ng-template #formContent>\r\n\r\n  <h1 class=\"handy-form-title\"> {{ headline[action]}} </h1>\r\n\r\n  <handy-form #formComp \r\n    [formName]=\"formName\" \r\n    [formGroup]=\"form\" \r\n    [rememberState]=\"rememberFormState\" \r\n    [defaultResetBtn]=\"false\" \r\n    [disablePin]=\"true\"\r\n    [hideFormOptions]=\"true\"\r\n    (validSubmitEvent)=\"onValidSubmit($event)\" \r\n    (invalidSubmitEvent)=\"onInvalidSubmit($event)\"\r\n    (submitDisabledChange)=\"submitDisabledChange($event)\">\r\n\r\n    <!-- Input fields -->\r\n\r\n    <handy-text-input [formControl]=\"form.get('accountEmail')\" placeholder=\"account@email.com\" label=\"Account email\" ></handy-text-input>\r\n\r\n    <raised-btn *ngIf=\"!inDialog\" color=\"primary\" icon=\"send\" [disabled]=\"submitDisabled\"\r\n      (click)=\"triggerSubmit()\" class=\"handy-single-button-form\">Send</raised-btn>\r\n\r\n  </handy-form>\r\n</ng-template>\r\n\r\n<!-- For handling both, as regular component and as dialog -->\r\n<ng-container *ngIf=\"!inDialog\">\r\n  <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"inDialog\">\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <flat-btn (click)=\"dialogRef.close()\">Cancel</flat-btn>\r\n    <raised-btn color=\"primary\" icon=\"send\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Send</raised-btn>\r\n  </mat-dialog-actions>\r\n\r\n</ng-container>","import { HandyAutoCompleteData, HandyNgSelectOptionsData, HandyNgRadioGroupOptionsData, HandyNgSelectOptions } from '@handy-ng/types';\r\nimport { HandyNgUserService, HandyNgUtilsService, HandyNgConfigService } from '@handy-ng/services';\r\nimport { Component, OnInit, Optional, Inject, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { HandyMemoryStateForm } from '@handy-ng/extenders/handy-memory-state-form';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { required, email } from '@ng-shared/form-validators';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'login-form',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent extends HandyMemoryStateForm<FormDataShape> implements OnInit, OnDestroy {\r\n\r\n  public form: FormGroup;\r\n  public formName = 'login';\r\n  public rememberFormState: boolean = false;\r\n\r\n  public loginErrMsg: string;\r\n  public requestEmail: false | 'unlock' | 'verifyEmail' = false;\r\n  public unlockCountDown: number;\r\n  public openRegistration: boolean;\r\n  protected _coutDownSub: Subscription;\r\n\r\n\r\n  constructor (\r\n    @Optional() public dialogRef: MatDialogRef<LoginComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\r\n    protected _ngConfig: HandyNgConfigService,\r\n    protected _handyNgUserService: HandyNgUserService,\r\n    protected _route: ActivatedRoute,\r\n    public handyNgUtilsService: HandyNgUtilsService,) {\r\n\r\n    super(_handyNgUserService, handyNgUtilsService);\r\n\r\n    this.openRegistration = this._ngConfig.data.userRegistration.openRegistration;\r\n\r\n    this.initExtender();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onValidSubmit(formData: FormDataShape): void {\r\n\r\n    let { email, password } = formData;\r\n    this._handyNgUserService.login(email, password)\r\n      .then(loginResult => {\r\n\r\n        let { failReason = null, lockTimeLeft } = loginResult;\r\n\r\n        if (failReason) {\r\n\r\n          switch (failReason) {\r\n\r\n            case 'unverified':\r\n\r\n              this.loginErrMsg = `This account has not been verified yet. Check your email or request verification email.`;\r\n              this.requestEmail = 'verifyEmail';\r\n              this.unlockCountDown = null;\r\n\r\n              break;\r\n\r\n            case 'locked':\r\n\r\n              this.loginErrMsg = `This account is locked due too many failed login attempts.`;\r\n              this.requestEmail = 'unlock';\r\n              this._startCountDown(lockTimeLeft);\r\n\r\n              break;\r\n\r\n            case 'banned':\r\n\r\n              this.loginErrMsg = `This account is banned.`;\r\n              this.requestEmail = false;\r\n              this.unlockCountDown = null;\r\n\r\n              break;\r\n\r\n            default:\r\n\r\n              this.loginErrMsg = 'Invalid login credential.';\r\n              this.requestEmail = false;\r\n              this.unlockCountDown = null;\r\n\r\n              break;\r\n          }\r\n\r\n          return;\r\n\r\n        }\r\n\r\n        this._handyNgUserService.redirectToDashboard();\r\n        this.clearMessages();\r\n\r\n      })\r\n      .catch(err => {\r\n\r\n        console.log(err);\r\n\r\n        this._handyNgUserService.redirectToErrPageWithApiErr(err);\r\n\r\n      })\r\n\r\n  }\r\n\r\n  public onInvalidSubmit(formData: FormDataShape): void {\r\n    // console.log(formData)\r\n  }\r\n\r\n  protected _startCountDown(initial: number): void {\r\n\r\n    this._coutDownSub = this.handyNgUtilsService.countDown(Math.floor(initial)).subscribe(step => {\r\n\r\n      let { timeLeft, complete } = step;\r\n\r\n      this.unlockCountDown = timeLeft;\r\n\r\n      if (complete) {\r\n        this.clearMessages();\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  public clearMessages(): void {\r\n\r\n    this.unlockCountDown = null;\r\n    this.loginErrMsg = null;\r\n    this.requestEmail = false;\r\n\r\n    if (this._coutDownSub) {\r\n      this._coutDownSub.unsubscribe();\r\n    }\r\n\r\n  }\r\n\r\n  getFormInitData(): Partial<FormDataShape> {\r\n\r\n    return {\r\n      email: this._route.snapshot.queryParams['email']\r\n    };\r\n\r\n  }\r\n\r\n  createForm(formInitData: Partial<FormDataShape>): FormGroup {\r\n\r\n    let fg: FormGroup = new FormGroup({\r\n      email: new FormControl(formInitData.email, [email(), required('Email is required')]),\r\n      password: new FormControl(null, [required('Password is required')])\r\n    })\r\n\r\n    return fg;\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearMessages();\r\n  }\r\n\r\n}\r\n\r\ntype FormDataShape = {\r\n\r\n  email: string,\r\n  password: string\r\n\r\n}\r\ntype DialogData = {\r\n  formData: Partial<FormDataShape>\r\n}\r\n","<ng-template #formContent>\r\n\r\n  <h1 class=\"handy-form-title\">Login</h1>\r\n  <handy-form #formComp [formName]=\"formName\" [formGroup]=\"form\" [rememberState]=\"rememberFormState\"\r\n  (valueChange)=\"clearMessages()\"\r\n    [defaultResetBtn]=\"false\" [disablePin]=\"true\" [hideFormOptions]=\"true\" (validSubmitEvent)=\"onValidSubmit($event)\"\r\n    (invalidSubmitEvent)=\"onInvalidSubmit($event)\" (submitDisabledChange)=\"submitDisabledChange($event)\">\r\n\r\n    <!-- Input fields -->\r\n\r\n    <handy-text-input [formControl]=\"form.get('email')\" label=\"Email\"\r\n      placeholder=\"your@email.com\"></handy-text-input>\r\n    <handy-password-input [formControl]=\"form.get('password')\" label=\"Password\"></handy-password-input>\r\n\r\n    <mat-error *ngIf=\"loginErrMsg\">{{ loginErrMsg }}</mat-error>\r\n    <mat-error *ngIf=\"unlockCountDown\" class=\"handy-form-unlockCountDown\">Account\r\n      is locked for next\r\n      {{ unlockCountDown | handyTime }}</mat-error>\r\n\r\n    <div class=\"handy-form-action-login\">\r\n      <raised-btn *ngIf=\"!inDialog\" color=\"primary\" icon=\"login\" [disabled]=\"submitDisabled\"\r\n        (click)=\"triggerSubmit()\" class=\"handy-btn-form-action\">Login</raised-btn>\r\n      \r\n        <a *ngIf=\"((requestEmail !== 'unlock') && (requestEmail !== 'verifyEmail'))\"\r\n          routerLink=\"/email-request/passwordReset\" \r\n        [queryParams]=\"{ email: form.get('email').value }\">Forgot Your\r\n        Password?</a>\r\n\r\n        <stroked-btn *ngIf=\"requestEmail === 'unlock'\" routerLink=\"/email-request/unlock\"\r\n          [queryParams]=\"{ email: form.get('email').value }\" color=\"primary\" icon=\"lock_open\">\r\n          Unlock Account\r\n        </stroked-btn>\r\n        <stroked-btn *ngIf=\"requestEmail === 'verifyEmail'\" routerLink=\"/email-request/verify\"\r\n          [queryParams]=\"{ email: form.get('email').value }\" color=\"primary\" icon=\"email\">\r\n          Verify Account Email\r\n        </stroked-btn>\r\n    </div>\r\n    <div class=\"handy-form-action-login-footer\" [ngClass]=\"[ ( requestEmail === 'unlock') || (requestEmail === 'verifyEmail') ? 'handy-form-action-login-footer-many' :' def']\" >\r\n      <a *ngIf=\"openRegistration\" routerLink=\"/register\" [queryParams]=\"{ email: form.get('email').value }\">Create a New Account</a>\r\n      <a *ngIf=\"(requestEmail === 'unlock') || (requestEmail === 'verifyEmail')\"\r\n        routerLink=\"/email-request/passwordReset\" [queryParams]=\"{ email: form.get('email').value }\">Forgot Your\r\n        Password?</a>\r\n          \r\n    </div>\r\n  </handy-form>\r\n</ng-template>\r\n\r\n<!-- For handling both, as regular component and as dialog -->\r\n<ng-container *ngIf=\"!inDialog\">\r\n  <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"inDialog\">\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button (click)=\"dialogRef.close()\">Cancel</button>\r\n    <button mat-button color=\"warn\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Log in</button>\r\n  </mat-dialog-actions>\r\n\r\n</ng-container>\r\n","import { HandyAutoCompleteData, HandyNgSelectOptionsData, HandyNgRadioGroupOptionsData, HandyNgSelectOptions, PasswordStrengthResult, UnSignedObject } from '@handy-ng/types';\r\nimport { HandyNgUserService, HandyNgUtilsService } from '@handy-ng/services';\r\nimport { Component, OnInit, Optional, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { HandyMemoryStateForm } from '@handy-ng/extenders/handy-memory-state-form';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { required, password } from '@ng-shared/form-validators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'password-reset-form',\r\n  templateUrl: './password-reset.component.html',\r\n  styleUrls: ['./password-reset.component.scss']\r\n})\r\nexport class PasswordResetComponent extends HandyMemoryStateForm<FormDataShape> implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public formName = 'passwordReset';\r\n  public rememberFormState: boolean = false;\r\n\r\n  public email: string;\r\n  protected _hash: string;\r\n\r\n  public passwordStrengthHelp: PasswordStrengthResult;\r\n  public isInvitation: boolean = false;\r\n\r\n  constructor (\r\n    @Optional() public dialogRef: MatDialogRef<PasswordResetComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\r\n    protected _handyNgUserService: HandyNgUserService, \r\n    protected _route: ActivatedRoute,\r\n    protected _router: Router,\r\n    public handyNgUtilsService: HandyNgUtilsService, ) {\r\n    \r\n    super(_handyNgUserService, handyNgUtilsService);\r\n    \r\n    this.initExtender();\r\n\r\n    this.isInvitation = this._router.url.includes('invitation-password-set');\r\n    \r\n    let { email, hash } = this._route.snapshot.params;\r\n    this.email = email;\r\n    this._hash = hash;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onValidSubmit(formData: FormDataShape): void {\r\n\r\n    let { newPassword } = formData;\r\n    this._handyNgUserService.resetPassword(this.email, newPassword, this._hash)\r\n    .then(result => {\r\n\r\n      if (result.success) {\r\n        \r\n        let redirectTo: string = '/auth-msg';\r\n        let queryParams: UnSignedObject = { email: this.email, action: 'afterPasswordReset' };\r\n  \r\n        this._router.navigate([redirectTo], { queryParams });\r\n        return;\r\n\r\n      } else {\r\n        this._handyNgUserService.redirectToErrPage('500');\r\n      }\r\n\r\n\r\n    })\r\n    .catch(err => {\r\n      this._handyNgUserService.redirectToErrPageWithApiErr(err);\r\n    })\r\n\r\n  }\r\n  \r\n  public onInvalidSubmit(formData: FormDataShape): void {\r\n    // console.log(formData)\r\n  }\r\n\r\n  getFormInitData(): Partial<FormDataShape> {\r\n    \r\n    return {};\r\n\r\n  }\r\n  \r\n  createForm(formInitData: Partial<FormDataShape>): FormGroup {\r\n\r\n    let fg: FormGroup = new FormGroup({\r\n      newPassword: new FormControl(null, [required('New password is required'), password(this.handyNgUtilsService)])\r\n    })  \r\n\r\n    return fg;\r\n  \r\n  }\r\n\r\n  public asignGeneratedPassword(newPassword: string): void {\r\n    this.form.get('newPassword').setValue(newPassword);\r\n  }\r\n\r\n}\r\n\r\ntype FormDataShape = {\r\n\r\n  newPassword: string\r\n\r\n}\r\ntype DialogData = {\r\n  formData: Partial<FormDataShape>\r\n}\r\n","<ng-template #formContent>\r\n\r\n  <h1 class=\"handy-form-title\">Password reset for {{ email }}</h1>\r\n\r\n  <handy-form #formComp \r\n    [formName]=\"formName\" \r\n    [formGroup]=\"form\" \r\n    [rememberState]=\"rememberFormState\" \r\n    [defaultResetBtn]=\"false\" \r\n    [disablePin]=\"true\"\r\n    [hideFormOptions]=\"true\"\r\n    (validSubmitEvent)=\"onValidSubmit($event)\" \r\n    (invalidSubmitEvent)=\"onInvalidSubmit($event)\"\r\n    (submitDisabledChange)=\"submitDisabledChange($event)\">\r\n\r\n    <!-- Input fields -->\r\n\r\n    <handy-password-input [autofill]=\"false\" [formControl]=\"form.get('newPassword')\" label=\"New password\" (passwordStrength)=\"passwordStrengthHelp = $event\" placeholder=\"Strong password\"></handy-password-input>\r\n\r\n    <password-hint (generatedPassword)=\"asignGeneratedPassword($event)\" [passwordStrengt]=\"passwordStrengthHelp\" class=\"handy-form-password-hint\">\r\n    </password-hint>\r\n\r\n    <raised-btn *ngIf=\"!inDialog\" color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\"\r\n      class=\"handy-single-button-form\">Submit</raised-btn>\r\n\r\n  </handy-form>\r\n</ng-template>\r\n\r\n<!-- For handling both, as regular component and as dialog -->\r\n<ng-container *ngIf=\"!inDialog\">\r\n  <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"inDialog\">\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <flat-btn (click)=\"dialogRef.close()\">Cancel</flat-btn>\r\n    <raised-btn color=\"primary\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Submit</raised-btn>\r\n  </mat-dialog-actions>\r\n\r\n</ng-container>","import { HandyAutoCompleteData, HandyNgSelectOptionsData, HandyNgRadioGroupOptionsData, HandyNgSelectOptions, PasswordStrengthResult, UnSignedObject } from '@handy-ng/types';\r\nimport { HandyNgUserService, HandyNgUtilsService, HandyNgConfigService } from '@handy-ng/services';\r\nimport { Component, OnInit, Optional, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { HandyMemoryStateForm } from '@handy-ng/extenders/handy-memory-state-form';\r\n\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { required, email, password } from '@ng-shared/form-validators';\r\nimport { UserNgModel } from '@handy-ng/models/user.ng-model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'register-form',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent extends HandyMemoryStateForm<FormDataShape> implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public formName = 'register';\r\n  public rememberFormState: boolean = false;\r\n  public passwordStrengthHelp: PasswordStrengthResult;\r\n\r\n  constructor (\r\n    @Optional() public dialogRef: MatDialogRef<RegisterComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\r\n    protected _handyNgUserService: HandyNgUserService, \r\n    protected _handyNgConfigService: HandyNgConfigService,\r\n    protected _route: ActivatedRoute,\r\n    protected _router: Router,\r\n    protected _userModel: UserNgModel, \r\n    public handyNgUtilsService: HandyNgUtilsService, ) {\r\n    \r\n    super(_handyNgUserService, handyNgUtilsService);\r\n    \r\n    this.initExtender();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    \r\n  }\r\n\r\n  public onValidSubmit(formData: FormDataShape): void {\r\n\r\n    let { registrationEmail, password } = formData;\r\n    let redirectTo: string = '/auth-msg';\r\n    let queryParams: UnSignedObject = { email: registrationEmail, action: 'afterRegister' };\r\n\r\n    this._handyNgUserService.register(registrationEmail, password)\r\n    .then(result => {\r\n\r\n      if (result.success && !this._handyNgConfigService.data.userRegistration.verifyEmail) {\r\n\r\n        redirectTo = '/dashboard';\r\n        queryParams = null;\r\n        return this._handyNgUserService.login(registrationEmail, password) as any;\r\n\r\n      }\r\n\r\n      return Promise.resolve();\r\n\r\n    })\r\n    .then(() => {\r\n\r\n      this._router.navigate([redirectTo], { queryParams });\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n      this._handyNgUserService.redirectToErrPageWithApiErr(err);\r\n\r\n    })\r\n\r\n  }\r\n  \r\n  public onInvalidSubmit(formData: FormDataShape): void {\r\n    // console.log(formData)\r\n  }\r\n\r\n  getFormInitData(): Partial<FormDataShape> {\r\n    \r\n    return {\r\n      registrationEmail: (this._route.snapshot.queryParams.email) ? this._route.snapshot.queryParams.email : null\r\n    };\r\n\r\n  }\r\n  \r\n  createForm(formInitData: Partial<FormDataShape>): FormGroup {\r\n\r\n    let fg: FormGroup = new FormGroup({\r\n      registrationEmail: new FormControl(formInitData.registrationEmail, [email(), required('Email is required')], [this._userModel.uniqueValidator('email', 'This email is already taken')]),\r\n      password: new FormControl(null, [required('Password is required'), password(this.handyNgUtilsService)])\r\n    })  \r\n\r\n    return fg;\r\n  \r\n  }\r\n\r\n  public asignGeneratedPassword(newPassword: string): void {\r\n    this.form.get('password').setValue(newPassword);\r\n  }\r\n\r\n}\r\n\r\ntype FormDataShape = {\r\n\r\n  registrationEmail: string,\r\n  password: string\r\n\r\n}\r\ntype DialogData = {\r\n  formData: Partial<FormDataShape>\r\n}\r\n","<ng-template #formContent>\r\n\r\n  <h1 class=\"handy-form-title\">Create account</h1>\r\n\r\n  <handy-form #formComp [formName]=\"formName\" [formGroup]=\"form\" [rememberState]=\"rememberFormState\"\r\n    [defaultResetBtn]=\"false\" [disablePin]=\"true\" (validSubmitEvent)=\"onValidSubmit($event)\"\r\n    (invalidSubmitEvent)=\"onInvalidSubmit($event)\" [hideFormOptions]=\"true\"\r\n    (submitDisabledChange)=\"submitDisabledChange($event)\">\r\n\r\n    <!-- Input fields -->\r\n\r\n    <handy-text-input [formControl]=\"form.get('registrationEmail')\" fieldName=\"registration-email\" label=\"Account Email\"\r\n      placeholder=\"your@email.com\"></handy-text-input>\r\n\r\n    <handy-password-input [autofill]=\"false\" [formControl]=\"form.get('password')\" label=\"Password\"\r\n      (passwordStrength)=\"passwordStrengthHelp = $event\"></handy-password-input>\r\n\r\n    <password-hint (generatedPassword)=\"asignGeneratedPassword($event)\" [passwordStrengt]=\"passwordStrengthHelp\"\r\n      color=\"primary\" class=\"handy-form-password-hint\"></password-hint>\r\n\r\n    <div class=\"handy-form-register-actions\">\r\n      <raised-btn *ngIf=\"!inDialog\" color=\"primary\" icon=\"person_add\" [disabled]=\"submitDisabled\"\r\n        (click)=\"triggerSubmit()\" class=\"handy-single-button-form\">Create account</raised-btn>\r\n      <stroked-btn routerLink=\"/login\" color=\"primary\" icon=\"login\" class=\"handy-single-button-form\">Login\r\n      </stroked-btn>\r\n    </div>\r\n  </handy-form>\r\n</ng-template>\r\n\r\n<!-- For handling both, as regular component and as dialog -->\r\n<ng-container *ngIf=\"!inDialog\">\r\n  <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"inDialog\">\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"formContent\"></ng-container>\r\n\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <flat-btn (click)=\"dialogRef.close()\">Cancel</flat-btn>\r\n    <raised-btn color=\"primary\" icon=\"person_add\" [disabled]=\"submitDisabled\" (click)=\"triggerSubmit()\">Create account\r\n    </raised-btn>\r\n  </mat-dialog-actions>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { HandyNgUserService, HandyNgUtilsService } from '@handy-ng/services';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { EmailRequestAction, UnSignedObject } from '@handy-ng/types';\r\n\r\n@Component({\r\n  selector: 'app-auth-message',\r\n  templateUrl: './auth-message.component.html',\r\n  styleUrls: ['./auth-message.component.scss']\r\n})\r\nexport class AuthMessageComponent implements OnInit, OnDestroy {\r\n\r\n  public action: MessageActions;\r\n\r\n  protected actions: MessageActions[] = [\r\n    'afterRegister',\r\n    'emailVerified',\r\n    'unlock',\r\n    'verify',\r\n    'passwordReset',\r\n    'accountUnlocked',\r\n    'afterPasswordReset',\r\n    'logout'\r\n  ];\r\n\r\n  public headlines: MessageActionsString = {\r\n    afterRegister: 'Your registration was sucessful',\r\n    emailVerified: 'Your email was verified',\r\n    unlock: 'Unlock link was sent',\r\n    passwordReset: 'Password reset link was sent',\r\n    verify: 'Verification email was sent',\r\n    accountUnlocked: 'Your account was unlocked',\r\n    afterPasswordReset: 'Your new password was saved',\r\n    logout: `You've logged out`\r\n  }\r\n\r\n  public messages: MessageActionsString = {\r\n    afterRegister: 'Check your email for account verification',\r\n    emailVerified: 'You can login',\r\n    unlock: 'Check your inbox and follow the instructions in sent email',\r\n    passwordReset: 'Check your inbox and follow the instructions in sent email',\r\n    verify: 'Check your inbox and follow the instructions in sent email',\r\n    accountUnlocked: 'You can login',\r\n    afterPasswordReset: 'You can login',\r\n    logout: ''\r\n  }\r\n\r\n  protected _redirectActions: MessageActions[] = [\r\n    'emailVerified', 'accountUnlocked', 'afterPasswordReset', 'logout'\r\n  ];\r\n\r\n  public redirects: MessageActionsRedirects = {\r\n    emailVerified: {\r\n      msg: 'You will be redirected to Log in page in',\r\n      link: '/login',\r\n      coutDownMs: 5000,\r\n      queryParms: null\r\n    },\r\n    accountUnlocked: {\r\n      msg: 'You will be redirected to Log in page in',\r\n      link: '/login',\r\n      coutDownMs: 5000,\r\n      queryParms: null\r\n    },\r\n    afterPasswordReset: {\r\n      msg: 'You will be redirected to Log in page in',\r\n      link: '/login',\r\n      coutDownMs: 5000,\r\n      queryParms: null\r\n    },\r\n    logout: {\r\n      msg: 'You will be redirected to Home page in',\r\n      link: '/',\r\n      coutDownMs: 5000,\r\n      queryParms: null\r\n    }\r\n  }\r\n\r\n  public countDown: number = 0;\r\n  protected _countDownSub: Subscription;\r\n\r\n  public email: string;\r\n\r\n  constructor (\r\n    public handyNguserService: HandyNgUserService,\r\n    protected _route: ActivatedRoute,\r\n    protected _router: Router,\r\n    protected _handyNgUtilsService: HandyNgUtilsService) {\r\n\r\n    this._parseRoute();\r\n\r\n  }\r\n\r\n  protected _parseRoute(): void {\r\n\r\n    \r\n    let { email = null, action = null } = this._route.snapshot.queryParams;\r\n    if (!action) {\r\n      action = this._route.snapshot.data.action;      \r\n    }\r\n\r\n    if (!action || !this.actions.includes(action)) {\r\n      this.handyNguserService.redirectToErrPage('404');\r\n      return;\r\n    }\r\n\r\n    this.email = email;\r\n    this.action = action;\r\n\r\n    if (this.action === 'logout') {\r\n      this.handyNguserService.logout(true);\r\n    }\r\n\r\n    switch (this.action) {\r\n      case 'emailVerified':\r\n      case 'accountUnlocked':\r\n      case 'afterPasswordReset':\r\n      case 'logout':\r\n        \r\n\r\n        if (this.email) {\r\n          this.redirects[this.action].queryParms = { email: this.email };\r\n        }\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (this._redirectActions.includes(action)) {\r\n      this.startCountDown();\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  protected startCountDown(): void {\r\n\r\n    this._countDownSub = this._handyNgUtilsService.countDown(this.redirects[this.action].coutDownMs, 1000).subscribe(step => {\r\n\r\n      let { timeLeft, complete } = step;\r\n\r\n      this.countDown = timeLeft;\r\n\r\n      if (complete) {\r\n        this._router.navigate([this.redirects[this.action].link], { queryParams: this.redirects[this.action].queryParms });\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n    if (this._countDownSub) {\r\n      this._countDownSub.unsubscribe(); \r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\ntype MessageActions = EmailRequestAction | 'afterRegister' | 'emailVerified' | 'accountUnlocked' | 'afterPasswordReset' | 'logout';\r\ntype MessageActionsString = { [key in MessageActions]: string };\r\ntype MessageActionsRedirects = { [key in MessageActions]?: {\r\n  link: string,\r\n  msg: string,\r\n  coutDownMs: number,\r\n  queryParms: UnSignedObject\r\n} };","<h1>{{ headlines[action] }}</h1>\r\n<p *ngIf=\"messages[action]\">{{ messages[action] }}</p>\r\n<p *ngIf=\"redirects[action]\">{{ redirects[action].msg }} {{ countDown | handyTime }}</p>"],"sourceRoot":"webpack:///"}